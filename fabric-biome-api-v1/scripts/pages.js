var pages = [{"name":"public class BiomeModification","description":"net.fabricmc.fabric.api.biome.v1.BiomeModification","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification/index.html","searchKeys":["BiomeModification","public class BiomeModification"]},{"name":"void BiomeModification(Identifier id)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModification.BiomeModification","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification/-biome-modification.html","searchKeys":["BiomeModification","void BiomeModification(Identifier id)"]},{"name":"public interface BiomeModificationContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/index.html","searchKeys":["BiomeModificationContext","public interface BiomeModificationContext"]},{"name":"interface EffectsContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/index.html","searchKeys":["EffectsContext","interface EffectsContext"]},{"name":"void clearAdditionsSound()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearAdditionsSound","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-additions-sound.html","searchKeys":["clearAdditionsSound","void clearAdditionsSound()"]},{"name":"void clearAmbientSound()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearAmbientSound","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-ambient-sound.html","searchKeys":["clearAmbientSound","void clearAmbientSound()"]},{"name":"void clearFoliageColor()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearFoliageColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-foliage-color.html","searchKeys":["clearFoliageColor","void clearFoliageColor()"]},{"name":"void clearGrassColor()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearGrassColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-grass-color.html","searchKeys":["clearGrassColor","void clearGrassColor()"]},{"name":"void clearMoodSound()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearMoodSound","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-mood-sound.html","searchKeys":["clearMoodSound","void clearMoodSound()"]},{"name":"void clearMusic()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearMusic","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-music.html","searchKeys":["clearMusic","void clearMusic()"]},{"name":"void clearParticleConfig()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearParticleConfig","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-particle-config.html","searchKeys":["clearParticleConfig","void clearParticleConfig()"]},{"name":"abstract void setFogColor(int color)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.setFogColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/set-fog-color.html","searchKeys":["setFogColor","abstract void setFogColor(int color)"]},{"name":"abstract void setGrassColorModifier(BiomeEffects.GrassColorModifier colorModifier)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.setGrassColorModifier","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/set-grass-color-modifier.html","searchKeys":["setGrassColorModifier","abstract void setGrassColorModifier(BiomeEffects.GrassColorModifier colorModifier)"]},{"name":"abstract void setSkyColor(int color)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.setSkyColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/set-sky-color.html","searchKeys":["setSkyColor","abstract void setSkyColor(int color)"]},{"name":"abstract void setWaterColor(int color)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.setWaterColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/set-water-color.html","searchKeys":["setWaterColor","abstract void setWaterColor(int color)"]},{"name":"abstract void setWaterFogColor(int color)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.setWaterFogColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/set-water-fog-color.html","searchKeys":["setWaterFogColor","abstract void setWaterFogColor(int color)"]},{"name":"interface GenerationSettingsContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/index.html","searchKeys":["GenerationSettingsContext","interface GenerationSettingsContext"]},{"name":"void addBuiltInCarver(GenerationStep.Carver step, ConfiguredCarver<? extends Object> configuredCarver)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.addBuiltInCarver","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/add-built-in-carver.html","searchKeys":["addBuiltInCarver","void addBuiltInCarver(GenerationStep.Carver step, ConfiguredCarver<? extends Object> configuredCarver)"]},{"name":"void addBuiltInFeature(GenerationStep.Feature step, ConfiguredFeature<? extends Object, ? extends Object> configuredFeature)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.addBuiltInFeature","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/add-built-in-feature.html","searchKeys":["addBuiltInFeature","void addBuiltInFeature(GenerationStep.Feature step, ConfiguredFeature<? extends Object, ? extends Object> configuredFeature)"]},{"name":"void addBuiltInStructure(ConfiguredStructureFeature<? extends Object, ? extends Object> configuredStructure)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.addBuiltInStructure","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/add-built-in-structure.html","searchKeys":["addBuiltInStructure","void addBuiltInStructure(ConfiguredStructureFeature<? extends Object, ? extends Object> configuredStructure)"]},{"name":"abstract void addCarver(GenerationStep.Carver step, RegistryKey<ConfiguredCarver<? extends Object>> carverKey)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.addCarver","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/add-carver.html","searchKeys":["addCarver","abstract void addCarver(GenerationStep.Carver step, RegistryKey<ConfiguredCarver<? extends Object>> carverKey)"]},{"name":"static void addCarver(Predicate<BiomeSelectionContext> biomeSelector, GenerationStep.Carver step, RegistryKey<ConfiguredCarver<? extends Object>> configuredCarverKey)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModifications.addCarver","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modifications/add-carver.html","searchKeys":["addCarver","static void addCarver(Predicate<BiomeSelectionContext> biomeSelector, GenerationStep.Carver step, RegistryKey<ConfiguredCarver<? extends Object>> configuredCarverKey)"]},{"name":"abstract void addFeature(GenerationStep.Feature step, RegistryKey<ConfiguredFeature<? extends Object, ? extends Object>> configuredFeatureKey)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.addFeature","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/add-feature.html","searchKeys":["addFeature","abstract void addFeature(GenerationStep.Feature step, RegistryKey<ConfiguredFeature<? extends Object, ? extends Object>> configuredFeatureKey)"]},{"name":"static void addFeature(Predicate<BiomeSelectionContext> biomeSelector, GenerationStep.Feature step, RegistryKey<ConfiguredFeature<? extends Object, ? extends Object>> configuredFeatureKey)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModifications.addFeature","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modifications/add-feature.html","searchKeys":["addFeature","static void addFeature(Predicate<BiomeSelectionContext> biomeSelector, GenerationStep.Feature step, RegistryKey<ConfiguredFeature<? extends Object, ? extends Object>> configuredFeatureKey)"]},{"name":"abstract void addStructure(RegistryKey<ConfiguredStructureFeature<? extends Object, ? extends Object>> configuredStructureKey)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.addStructure","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/add-structure.html","searchKeys":["addStructure","abstract void addStructure(RegistryKey<ConfiguredStructureFeature<? extends Object, ? extends Object>> configuredStructureKey)"]},{"name":"static void addStructure(Predicate<BiomeSelectionContext> biomeSelector, RegistryKey<ConfiguredStructureFeature<? extends Object, ? extends Object>> configuredStructureKey)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModifications.addStructure","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modifications/add-structure.html","searchKeys":["addStructure","static void addStructure(Predicate<BiomeSelectionContext> biomeSelector, RegistryKey<ConfiguredStructureFeature<? extends Object, ? extends Object>> configuredStructureKey)"]},{"name":"boolean removeBuiltInStructure(ConfiguredStructureFeature<? extends Object, ? extends Object> configuredStructure)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.removeBuiltInStructure","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/remove-built-in-structure.html","searchKeys":["removeBuiltInStructure","boolean removeBuiltInStructure(ConfiguredStructureFeature<? extends Object, ? extends Object> configuredStructure)"]},{"name":"void setBuiltInSurfaceBuilder(ConfiguredSurfaceBuilder<? extends Object> configuredSurfaceBuilder)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.setBuiltInSurfaceBuilder","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/set-built-in-surface-builder.html","searchKeys":["setBuiltInSurfaceBuilder","void setBuiltInSurfaceBuilder(ConfiguredSurfaceBuilder<? extends Object> configuredSurfaceBuilder)"]},{"name":"abstract void setSurfaceBuilder(RegistryKey<ConfiguredSurfaceBuilder<? extends Object>> surfaceBuilderKey)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.setSurfaceBuilder","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/set-surface-builder.html","searchKeys":["setSurfaceBuilder","abstract void setSurfaceBuilder(RegistryKey<ConfiguredSurfaceBuilder<? extends Object>> surfaceBuilderKey)"]},{"name":"interface SpawnSettingsContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/index.html","searchKeys":["SpawnSettingsContext","interface SpawnSettingsContext"]},{"name":"abstract void addSpawn(SpawnGroup spawnGroup, SpawnSettings.SpawnEntry spawnEntry)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.addSpawn","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/add-spawn.html","searchKeys":["addSpawn","abstract void addSpawn(SpawnGroup spawnGroup, SpawnSettings.SpawnEntry spawnEntry)"]},{"name":"static void addSpawn(Predicate<BiomeSelectionContext> biomeSelector, SpawnGroup spawnGroup, EntityType<? extends Object> entityType, int weight, int minGroupSize, int maxGroupSize)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModifications.addSpawn","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modifications/add-spawn.html","searchKeys":["addSpawn","static void addSpawn(Predicate<BiomeSelectionContext> biomeSelector, SpawnGroup spawnGroup, EntityType<? extends Object> entityType, int weight, int minGroupSize, int maxGroupSize)"]},{"name":"abstract void clearSpawnCost(EntityType<? extends Object> entityType)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.clearSpawnCost","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/clear-spawn-cost.html","searchKeys":["clearSpawnCost","abstract void clearSpawnCost(EntityType<? extends Object> entityType)"]},{"name":"abstract boolean removeSpawns(BiPredicate<SpawnGroup, SpawnSettings.SpawnEntry> predicate)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.removeSpawns","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/remove-spawns.html","searchKeys":["removeSpawns","abstract boolean removeSpawns(BiPredicate<SpawnGroup, SpawnSettings.SpawnEntry> predicate)"]},{"name":"boolean removeSpawnsOfEntityType(EntityType<? extends Object> entityType)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.removeSpawnsOfEntityType","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/remove-spawns-of-entity-type.html","searchKeys":["removeSpawnsOfEntityType","boolean removeSpawnsOfEntityType(EntityType<? extends Object> entityType)"]},{"name":"abstract void setCreatureSpawnProbability(float probability)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.setCreatureSpawnProbability","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/set-creature-spawn-probability.html","searchKeys":["setCreatureSpawnProbability","abstract void setCreatureSpawnProbability(float probability)"]},{"name":"abstract void setPlayerSpawnFriendly(boolean playerSpawnFriendly)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.setPlayerSpawnFriendly","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/set-player-spawn-friendly.html","searchKeys":["setPlayerSpawnFriendly","abstract void setPlayerSpawnFriendly(boolean playerSpawnFriendly)"]},{"name":"abstract void setSpawnCost(EntityType<? extends Object> entityType, double mass, double gravityLimit)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.setSpawnCost","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/set-spawn-cost.html","searchKeys":["setSpawnCost","abstract void setSpawnCost(EntityType<? extends Object> entityType, double mass, double gravityLimit)"]},{"name":"interface WeatherContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.WeatherContext","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-weather-context/index.html","searchKeys":["WeatherContext","interface WeatherContext"]},{"name":"abstract void setDownfall(float downfall)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.WeatherContext.setDownfall","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-weather-context/set-downfall.html","searchKeys":["setDownfall","abstract void setDownfall(float downfall)"]},{"name":"abstract void setDownfall(float downfall)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.setDownfall","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/set-downfall.html","searchKeys":["setDownfall","abstract void setDownfall(float downfall)"]},{"name":"abstract void setPrecipitation(Biome.Precipitation precipitation)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.WeatherContext.setPrecipitation","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-weather-context/set-precipitation.html","searchKeys":["setPrecipitation","abstract void setPrecipitation(Biome.Precipitation precipitation)"]},{"name":"abstract void setPrecipitation(Biome.Precipitation precipitation)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.setPrecipitation","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/set-precipitation.html","searchKeys":["setPrecipitation","abstract void setPrecipitation(Biome.Precipitation precipitation)"]},{"name":"abstract void setTemperature(float temperature)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.WeatherContext.setTemperature","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-weather-context/set-temperature.html","searchKeys":["setTemperature","abstract void setTemperature(float temperature)"]},{"name":"abstract void setTemperature(float temperature)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.setTemperature","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/set-temperature.html","searchKeys":["setTemperature","abstract void setTemperature(float temperature)"]},{"name":"abstract void setTemperatureModifier(Biome.TemperatureModifier temperatureModifier)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.WeatherContext.setTemperatureModifier","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-weather-context/set-temperature-modifier.html","searchKeys":["setTemperatureModifier","abstract void setTemperatureModifier(Biome.TemperatureModifier temperatureModifier)"]},{"name":"abstract void setTemperatureModifier(Biome.TemperatureModifier temperatureModifier)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.setTemperatureModifier","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/set-temperature-modifier.html","searchKeys":["setTemperatureModifier","abstract void setTemperatureModifier(Biome.TemperatureModifier temperatureModifier)"]},{"name":"abstract BiomeModificationContext.EffectsContext getEffects()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.getEffects","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/get-effects.html","searchKeys":["getEffects","abstract BiomeModificationContext.EffectsContext getEffects()"]},{"name":"BiomeModificationContext.EffectsContext getEffects()","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.getEffects","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/get-effects.html","searchKeys":["getEffects","BiomeModificationContext.EffectsContext getEffects()"]},{"name":"abstract BiomeModificationContext.GenerationSettingsContext getGenerationSettings()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.getGenerationSettings","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/get-generation-settings.html","searchKeys":["getGenerationSettings","abstract BiomeModificationContext.GenerationSettingsContext getGenerationSettings()"]},{"name":"abstract BiomeModificationContext.SpawnSettingsContext getSpawnSettings()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.getSpawnSettings","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/get-spawn-settings.html","searchKeys":["getSpawnSettings","abstract BiomeModificationContext.SpawnSettingsContext getSpawnSettings()"]},{"name":"abstract BiomeModificationContext.WeatherContext getWeather()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.getWeather","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/get-weather.html","searchKeys":["getWeather","abstract BiomeModificationContext.WeatherContext getWeather()"]},{"name":"BiomeModificationContext.WeatherContext getWeather()","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.getWeather","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/get-weather.html","searchKeys":["getWeather","BiomeModificationContext.WeatherContext getWeather()"]},{"name":"abstract void setCategory(Biome.Category category)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.setCategory","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/set-category.html","searchKeys":["setCategory","abstract void setCategory(Biome.Category category)"]},{"name":"void setCategory(Biome.Category category)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.setCategory","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/set-category.html","searchKeys":["setCategory","void setCategory(Biome.Category category)"]},{"name":"abstract void setDepth(float depth)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.setDepth","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/set-depth.html","searchKeys":["setDepth","abstract void setDepth(float depth)"]},{"name":"void setDepth(float depth)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.setDepth","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/set-depth.html","searchKeys":["setDepth","void setDepth(float depth)"]},{"name":"abstract void setScale(float scale)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.setScale","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/set-scale.html","searchKeys":["setScale","abstract void setScale(float scale)"]},{"name":"void setScale(float scale)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.setScale","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/set-scale.html","searchKeys":["setScale","void setScale(float scale)"]},{"name":"public final class BiomeModifications","description":"net.fabricmc.fabric.api.biome.v1.BiomeModifications","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modifications/index.html","searchKeys":["BiomeModifications","public final class BiomeModifications"]},{"name":"static BiomeModification create(Identifier id)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModifications.create","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modifications/create.html","searchKeys":["create","static BiomeModification create(Identifier id)"]},{"name":"static SpawnSettings.SpawnDensity create(double gravityLimit, double mass)","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnDensityAccessor.create","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-density-accessor/create.html","searchKeys":["create","static SpawnSettings.SpawnDensity create(double gravityLimit, double mass)"]},{"name":"public interface BiomeSelectionContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/index.html","searchKeys":["BiomeSelectionContext","public interface BiomeSelectionContext"]},{"name":"abstract Biome getBiome()","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.getBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/get-biome.html","searchKeys":["getBiome","abstract Biome getBiome()"]},{"name":"RegistryKey<Biome> getBiome()","description":"net.fabricmc.fabric.impl.biome.WeightedBiomeEntry.getBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-entry/get-biome.html","searchKeys":["getBiome","RegistryKey<Biome> getBiome()"]},{"name":"Biome getBiome()","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl.getBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/get-biome.html","searchKeys":["getBiome","Biome getBiome()"]},{"name":"abstract RegistryKey<Biome> getBiomeKey()","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.getBiomeKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/get-biome-key.html","searchKeys":["getBiomeKey","abstract RegistryKey<Biome> getBiomeKey()"]},{"name":"RegistryKey<Biome> getBiomeKey()","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl.getBiomeKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/get-biome-key.html","searchKeys":["getBiomeKey","RegistryKey<Biome> getBiomeKey()"]},{"name":"abstract Optional<RegistryKey<ConfiguredFeature<? extends Object, ? extends Object>>> getFeatureKey(ConfiguredFeature<? extends Object, ? extends Object> configuredFeature)","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.getFeatureKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/get-feature-key.html","searchKeys":["getFeatureKey","abstract Optional<RegistryKey<ConfiguredFeature<? extends Object, ? extends Object>>> getFeatureKey(ConfiguredFeature<? extends Object, ? extends Object> configuredFeature)"]},{"name":"Optional<RegistryKey<ConfiguredFeature<? extends Object, ? extends Object>>> getFeatureKey(ConfiguredFeature<? extends Object, ? extends Object> configuredFeature)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl.getFeatureKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/get-feature-key.html","searchKeys":["getFeatureKey","Optional<RegistryKey<ConfiguredFeature<? extends Object, ? extends Object>>> getFeatureKey(ConfiguredFeature<? extends Object, ? extends Object> configuredFeature)"]},{"name":"abstract Optional<RegistryKey<ConfiguredStructureFeature<? extends Object, ? extends Object>>> getStructureKey(ConfiguredStructureFeature<? extends Object, ? extends Object> configuredStructure)","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.getStructureKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/get-structure-key.html","searchKeys":["getStructureKey","abstract Optional<RegistryKey<ConfiguredStructureFeature<? extends Object, ? extends Object>>> getStructureKey(ConfiguredStructureFeature<? extends Object, ? extends Object> configuredStructure)"]},{"name":"Optional<RegistryKey<ConfiguredStructureFeature<? extends Object, ? extends Object>>> getStructureKey(ConfiguredStructureFeature<? extends Object, ? extends Object> configuredStructure)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl.getStructureKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/get-structure-key.html","searchKeys":["getStructureKey","Optional<RegistryKey<ConfiguredStructureFeature<? extends Object, ? extends Object>>> getStructureKey(ConfiguredStructureFeature<? extends Object, ? extends Object> configuredStructure)"]},{"name":"abstract Optional<RegistryKey<ConfiguredSurfaceBuilder<? extends Object>>> getSurfaceBuilderKey()","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.getSurfaceBuilderKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/get-surface-builder-key.html","searchKeys":["getSurfaceBuilderKey","abstract Optional<RegistryKey<ConfiguredSurfaceBuilder<? extends Object>>> getSurfaceBuilderKey()"]},{"name":"Optional<RegistryKey<ConfiguredSurfaceBuilder<? extends Object>>> getSurfaceBuilderKey()","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl.getSurfaceBuilderKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/get-surface-builder-key.html","searchKeys":["getSurfaceBuilderKey","Optional<RegistryKey<ConfiguredSurfaceBuilder<? extends Object>>> getSurfaceBuilderKey()"]},{"name":"boolean hasBuiltInFeature(ConfiguredFeature<? extends Object, ? extends Object> configuredFeature)","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.hasBuiltInFeature","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/has-built-in-feature.html","searchKeys":["hasBuiltInFeature","boolean hasBuiltInFeature(ConfiguredFeature<? extends Object, ? extends Object> configuredFeature)"]},{"name":"boolean hasBuiltInStructure(ConfiguredStructureFeature<? extends Object, ? extends Object> configuredStructure)","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.hasBuiltInStructure","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/has-built-in-structure.html","searchKeys":["hasBuiltInStructure","boolean hasBuiltInStructure(ConfiguredStructureFeature<? extends Object, ? extends Object> configuredStructure)"]},{"name":"boolean hasBuiltInSurfaceBuilder(ConfiguredSurfaceBuilder<? extends Object> surfaceBuilder)","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.hasBuiltInSurfaceBuilder","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/has-built-in-surface-builder.html","searchKeys":["hasBuiltInSurfaceBuilder","boolean hasBuiltInSurfaceBuilder(ConfiguredSurfaceBuilder<? extends Object> surfaceBuilder)"]},{"name":"boolean hasFeature(RegistryKey<ConfiguredFeature<? extends Object, ? extends Object>> key)","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.hasFeature","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/has-feature.html","searchKeys":["hasFeature","boolean hasFeature(RegistryKey<ConfiguredFeature<? extends Object, ? extends Object>> key)"]},{"name":"boolean hasStructure(RegistryKey<ConfiguredStructureFeature<? extends Object, ? extends Object>> key)","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.hasStructure","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/has-structure.html","searchKeys":["hasStructure","boolean hasStructure(RegistryKey<ConfiguredStructureFeature<? extends Object, ? extends Object>> key)"]},{"name":"boolean hasSurfaceBuilder(RegistryKey<ConfiguredSurfaceBuilder<? extends Object>> key)","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.hasSurfaceBuilder","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/has-surface-builder.html","searchKeys":["hasSurfaceBuilder","boolean hasSurfaceBuilder(RegistryKey<ConfiguredSurfaceBuilder<? extends Object>> key)"]},{"name":"public final class BiomeSelectors","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/index.html","searchKeys":["BiomeSelectors","public final class BiomeSelectors"]},{"name":"static Predicate<BiomeSelectionContext> all()","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.all","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/all.html","searchKeys":["all","static Predicate<BiomeSelectionContext> all()"]},{"name":"static Predicate<BiomeSelectionContext> builtIn()","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.builtIn","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/built-in.html","searchKeys":["builtIn","static Predicate<BiomeSelectionContext> builtIn()"]},{"name":"static Predicate<BiomeSelectionContext> categories(Array<Biome.Category> categories)","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.categories","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/categories.html","searchKeys":["categories","static Predicate<BiomeSelectionContext> categories(Array<Biome.Category> categories)"]},{"name":"static Predicate<BiomeSelectionContext> foundInOverworld()","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.foundInOverworld","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/found-in-overworld.html","searchKeys":["foundInOverworld","static Predicate<BiomeSelectionContext> foundInOverworld()"]},{"name":"static Predicate<BiomeSelectionContext> foundInTheEnd()","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.foundInTheEnd","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/found-in-the-end.html","searchKeys":["foundInTheEnd","static Predicate<BiomeSelectionContext> foundInTheEnd()"]},{"name":"static Predicate<BiomeSelectionContext> foundInTheNether()","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.foundInTheNether","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/found-in-the-nether.html","searchKeys":["foundInTheNether","static Predicate<BiomeSelectionContext> foundInTheNether()"]},{"name":"static Predicate<BiomeSelectionContext> vanilla()","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.vanilla","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/vanilla.html","searchKeys":["vanilla","static Predicate<BiomeSelectionContext> vanilla()"]},{"name":"public enum ModificationPhase","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/index.html","searchKeys":["ModificationPhase","public enum ModificationPhase"]},{"name":"ADDITIONS","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase.ADDITIONS","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/-a-d-d-i-t-i-o-n-s/index.html","searchKeys":["ADDITIONS","ADDITIONS"]},{"name":"POST_PROCESSING","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase.POST_PROCESSING","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/-p-o-s-t_-p-r-o-c-e-s-s-i-n-g/index.html","searchKeys":["POST_PROCESSING","POST_PROCESSING"]},{"name":"REMOVALS","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase.REMOVALS","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/-r-e-m-o-v-a-l-s/index.html","searchKeys":["REMOVALS","REMOVALS"]},{"name":"REPLACEMENTS","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase.REPLACEMENTS","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/-r-e-p-l-a-c-e-m-e-n-t-s/index.html","searchKeys":["REPLACEMENTS","REPLACEMENTS"]},{"name":"static ModificationPhase valueOf(String name)","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase.valueOf","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/value-of.html","searchKeys":["valueOf","static ModificationPhase valueOf(String name)"]},{"name":"static OverworldClimate valueOf(String name)","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate.valueOf","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/value-of.html","searchKeys":["valueOf","static OverworldClimate valueOf(String name)"]},{"name":"static Array<ModificationPhase> values()","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase.values","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/values.html","searchKeys":["values","static Array<ModificationPhase> values()"]},{"name":"static Array<OverworldClimate> values()","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate.values","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/values.html","searchKeys":["values","static Array<OverworldClimate> values()"]},{"name":"public final class NetherBiomes","description":"net.fabricmc.fabric.api.biome.v1.NetherBiomes","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-nether-biomes/index.html","searchKeys":["NetherBiomes","public final class NetherBiomes"]},{"name":"static void addNetherBiome(RegistryKey<Biome> biome, Biome.MixedNoisePoint mixedNoisePoint)","description":"net.fabricmc.fabric.api.biome.v1.NetherBiomes.addNetherBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-nether-biomes/add-nether-biome.html","searchKeys":["addNetherBiome","static void addNetherBiome(RegistryKey<Biome> biome, Biome.MixedNoisePoint mixedNoisePoint)"]},{"name":"static void addNetherBiome(RegistryKey<Biome> biome, Biome.MixedNoisePoint spawnNoisePoint)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addNetherBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-nether-biome.html","searchKeys":["addNetherBiome","static void addNetherBiome(RegistryKey<Biome> biome, Biome.MixedNoisePoint spawnNoisePoint)"]},{"name":"static boolean canGenerateInNether(RegistryKey<Biome> biome)","description":"net.fabricmc.fabric.api.biome.v1.NetherBiomes.canGenerateInNether","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-nether-biomes/can-generate-in-nether.html","searchKeys":["canGenerateInNether","static boolean canGenerateInNether(RegistryKey<Biome> biome)"]},{"name":"static boolean canGenerateInNether(RegistryKey<Biome> biome)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.canGenerateInNether","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/can-generate-in-nether.html","searchKeys":["canGenerateInNether","static boolean canGenerateInNether(RegistryKey<Biome> biome)"]},{"name":"public final class OverworldBiomes","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/index.html","searchKeys":["OverworldBiomes","public final class OverworldBiomes"]},{"name":"static void addBiomeVariant(RegistryKey<Biome> replaced, RegistryKey<Biome> variant, double chance, Array<OverworldClimate> climates)","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes.addBiomeVariant","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/add-biome-variant.html","searchKeys":["addBiomeVariant","static void addBiomeVariant(RegistryKey<Biome> replaced, RegistryKey<Biome> variant, double chance, Array<OverworldClimate> climates)"]},{"name":"static void addContinentalBiome(RegistryKey<Biome> biome, OverworldClimate climate, double weight)","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes.addContinentalBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/add-continental-biome.html","searchKeys":["addContinentalBiome","static void addContinentalBiome(RegistryKey<Biome> biome, OverworldClimate climate, double weight)"]},{"name":"static void addEdgeBiome(RegistryKey<Biome> parent, RegistryKey<Biome> edge, double weight)","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes.addEdgeBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/add-edge-biome.html","searchKeys":["addEdgeBiome","static void addEdgeBiome(RegistryKey<Biome> parent, RegistryKey<Biome> edge, double weight)"]},{"name":"static void addHillsBiome(RegistryKey<Biome> parent, RegistryKey<Biome> hills, double weight)","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes.addHillsBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/add-hills-biome.html","searchKeys":["addHillsBiome","static void addHillsBiome(RegistryKey<Biome> parent, RegistryKey<Biome> hills, double weight)"]},{"name":"static void addShoreBiome(RegistryKey<Biome> parent, RegistryKey<Biome> shore, double weight)","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes.addShoreBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/add-shore-biome.html","searchKeys":["addShoreBiome","static void addShoreBiome(RegistryKey<Biome> parent, RegistryKey<Biome> shore, double weight)"]},{"name":"static void setRiverBiome(RegistryKey<Biome> parent, RegistryKey<Biome> river)","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes.setRiverBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/set-river-biome.html","searchKeys":["setRiverBiome","static void setRiverBiome(RegistryKey<Biome> parent, RegistryKey<Biome> river)"]},{"name":"public enum OverworldClimate","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/index.html","searchKeys":["OverworldClimate","public enum OverworldClimate"]},{"name":"COOL","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate.COOL","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/-c-o-o-l/index.html","searchKeys":["COOL","COOL"]},{"name":"DRY","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate.DRY","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/-d-r-y/index.html","searchKeys":["DRY","DRY"]},{"name":"SNOWY","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate.SNOWY","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/-s-n-o-w-y/index.html","searchKeys":["SNOWY","SNOWY"]},{"name":"TEMPERATE","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate.TEMPERATE","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/-t-e-m-p-e-r-a-t-e/index.html","searchKeys":["TEMPERATE","TEMPERATE"]},{"name":"public final class TheEndBiomes","description":"net.fabricmc.fabric.api.biome.v1.TheEndBiomes","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-the-end-biomes/index.html","searchKeys":["TheEndBiomes","public final class TheEndBiomes"]},{"name":"static void addBarrensBiome(RegistryKey<Biome> highlands, RegistryKey<Biome> barrens, double weight)","description":"net.fabricmc.fabric.api.biome.v1.TheEndBiomes.addBarrensBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-the-end-biomes/add-barrens-biome.html","searchKeys":["addBarrensBiome","static void addBarrensBiome(RegistryKey<Biome> highlands, RegistryKey<Biome> barrens, double weight)"]},{"name":"static void addHighlandsBiome(RegistryKey<Biome> biome, double weight)","description":"net.fabricmc.fabric.api.biome.v1.TheEndBiomes.addHighlandsBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-the-end-biomes/add-highlands-biome.html","searchKeys":["addHighlandsBiome","static void addHighlandsBiome(RegistryKey<Biome> biome, double weight)"]},{"name":"static void addMainIslandBiome(RegistryKey<Biome> biome, double weight)","description":"net.fabricmc.fabric.api.biome.v1.TheEndBiomes.addMainIslandBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-the-end-biomes/add-main-island-biome.html","searchKeys":["addMainIslandBiome","static void addMainIslandBiome(RegistryKey<Biome> biome, double weight)"]},{"name":"static void addMidlandsBiome(RegistryKey<Biome> highlands, RegistryKey<Biome> midlands, double weight)","description":"net.fabricmc.fabric.api.biome.v1.TheEndBiomes.addMidlandsBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-the-end-biomes/add-midlands-biome.html","searchKeys":["addMidlandsBiome","static void addMidlandsBiome(RegistryKey<Biome> highlands, RegistryKey<Biome> midlands, double weight)"]},{"name":"static void addSmallIslandsBiome(RegistryKey<Biome> biome, double weight)","description":"net.fabricmc.fabric.api.biome.v1.TheEndBiomes.addSmallIslandsBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-the-end-biomes/add-small-islands-biome.html","searchKeys":["addSmallIslandsBiome","static void addSmallIslandsBiome(RegistryKey<Biome> biome, double weight)"]},{"name":"final class BiomeVariant","description":"net.fabricmc.fabric.impl.biome.BiomeVariant","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-biome-variant/index.html","searchKeys":["BiomeVariant","final class BiomeVariant"]},{"name":"void BiomeVariant(RegistryKey<Biome> variant, double chance)","description":"net.fabricmc.fabric.impl.biome.BiomeVariant.BiomeVariant","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-biome-variant/-biome-variant.html","searchKeys":["BiomeVariant","void BiomeVariant(RegistryKey<Biome> variant, double chance)"]},{"name":"double getChance()","description":"net.fabricmc.fabric.impl.biome.BiomeVariant.getChance","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-biome-variant/get-chance.html","searchKeys":["getChance","double getChance()"]},{"name":"RegistryKey<Biome> getVariant()","description":"net.fabricmc.fabric.impl.biome.BiomeVariant.getVariant","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-biome-variant/get-variant.html","searchKeys":["getVariant","RegistryKey<Biome> getVariant()"]},{"name":"public final class InternalBiomeData","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/index.html","searchKeys":["InternalBiomeData","public final class InternalBiomeData"]},{"name":"static void addEndBarrensReplacement(RegistryKey<Biome> highlands, RegistryKey<Biome> barrens, double weight)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addEndBarrensReplacement","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-end-barrens-replacement.html","searchKeys":["addEndBarrensReplacement","static void addEndBarrensReplacement(RegistryKey<Biome> highlands, RegistryKey<Biome> barrens, double weight)"]},{"name":"static void addEndBiomeReplacement(RegistryKey<Biome> replaced, RegistryKey<Biome> variant, double weight)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addEndBiomeReplacement","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-end-biome-replacement.html","searchKeys":["addEndBiomeReplacement","static void addEndBiomeReplacement(RegistryKey<Biome> replaced, RegistryKey<Biome> variant, double weight)"]},{"name":"static void addEndMidlandsReplacement(RegistryKey<Biome> highlands, RegistryKey<Biome> midlands, double weight)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addEndMidlandsReplacement","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-end-midlands-replacement.html","searchKeys":["addEndMidlandsReplacement","static void addEndMidlandsReplacement(RegistryKey<Biome> highlands, RegistryKey<Biome> midlands, double weight)"]},{"name":"static void addOverworldBiomeReplacement(RegistryKey<Biome> replaced, RegistryKey<Biome> variant, double chance, Array<OverworldClimate> climates)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addOverworldBiomeReplacement","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-overworld-biome-replacement.html","searchKeys":["addOverworldBiomeReplacement","static void addOverworldBiomeReplacement(RegistryKey<Biome> replaced, RegistryKey<Biome> variant, double chance, Array<OverworldClimate> climates)"]},{"name":"static void addOverworldContinentalBiome(OverworldClimate climate, RegistryKey<Biome> biome, double weight)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addOverworldContinentalBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-overworld-continental-biome.html","searchKeys":["addOverworldContinentalBiome","static void addOverworldContinentalBiome(OverworldClimate climate, RegistryKey<Biome> biome, double weight)"]},{"name":"static void addOverworldEdgeBiome(RegistryKey<Biome> primary, RegistryKey<Biome> edge, double weight)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addOverworldEdgeBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-overworld-edge-biome.html","searchKeys":["addOverworldEdgeBiome","static void addOverworldEdgeBiome(RegistryKey<Biome> primary, RegistryKey<Biome> edge, double weight)"]},{"name":"static void addOverworldHillsBiome(RegistryKey<Biome> primary, RegistryKey<Biome> hills, double weight)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addOverworldHillsBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-overworld-hills-biome.html","searchKeys":["addOverworldHillsBiome","static void addOverworldHillsBiome(RegistryKey<Biome> primary, RegistryKey<Biome> hills, double weight)"]},{"name":"static void addOverworldShoreBiome(RegistryKey<Biome> primary, RegistryKey<Biome> shore, double weight)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addOverworldShoreBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-overworld-shore-biome.html","searchKeys":["addOverworldShoreBiome","static void addOverworldShoreBiome(RegistryKey<Biome> primary, RegistryKey<Biome> shore, double weight)"]},{"name":"static Map<RegistryKey<Biome>, WeightedBiomePicker> getEndBarrensMap()","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getEndBarrensMap","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-end-barrens-map.html","searchKeys":["getEndBarrensMap","static Map<RegistryKey<Biome>, WeightedBiomePicker> getEndBarrensMap()"]},{"name":"static Map<RegistryKey<Biome>, WeightedBiomePicker> getEndBiomesMap()","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getEndBiomesMap","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-end-biomes-map.html","searchKeys":["getEndBiomesMap","static Map<RegistryKey<Biome>, WeightedBiomePicker> getEndBiomesMap()"]},{"name":"static Map<RegistryKey<Biome>, WeightedBiomePicker> getEndMidlandsMap()","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getEndMidlandsMap","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-end-midlands-map.html","searchKeys":["getEndMidlandsMap","static Map<RegistryKey<Biome>, WeightedBiomePicker> getEndMidlandsMap()"]},{"name":"static Map<RegistryKey<Biome>, Biome.MixedNoisePoint> getNetherBiomeNoisePoints()","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getNetherBiomeNoisePoints","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-nether-biome-noise-points.html","searchKeys":["getNetherBiomeNoisePoints","static Map<RegistryKey<Biome>, Biome.MixedNoisePoint> getNetherBiomeNoisePoints()"]},{"name":"static Map<RegistryKey<Biome>, WeightedBiomePicker> getOverworldEdges()","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getOverworldEdges","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-overworld-edges.html","searchKeys":["getOverworldEdges","static Map<RegistryKey<Biome>, WeightedBiomePicker> getOverworldEdges()"]},{"name":"static Map<RegistryKey<Biome>, WeightedBiomePicker> getOverworldHills()","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getOverworldHills","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-overworld-hills.html","searchKeys":["getOverworldHills","static Map<RegistryKey<Biome>, WeightedBiomePicker> getOverworldHills()"]},{"name":"static EnumMap<OverworldClimate, WeightedBiomePicker> getOverworldModdedContinentalBiomePickers()","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getOverworldModdedContinentalBiomePickers","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-overworld-modded-continental-biome-pickers.html","searchKeys":["getOverworldModdedContinentalBiomePickers","static EnumMap<OverworldClimate, WeightedBiomePicker> getOverworldModdedContinentalBiomePickers()"]},{"name":"static Map<RegistryKey<Biome>, RegistryKey<Biome>> getOverworldRivers()","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getOverworldRivers","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-overworld-rivers.html","searchKeys":["getOverworldRivers","static Map<RegistryKey<Biome>, RegistryKey<Biome>> getOverworldRivers()"]},{"name":"static Map<RegistryKey<Biome>, WeightedBiomePicker> getOverworldShores()","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getOverworldShores","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-overworld-shores.html","searchKeys":["getOverworldShores","static Map<RegistryKey<Biome>, WeightedBiomePicker> getOverworldShores()"]},{"name":"static Map<RegistryKey<Biome>, VariantTransformer> getOverworldVariantTransformers()","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getOverworldVariantTransformers","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-overworld-variant-transformers.html","searchKeys":["getOverworldVariantTransformers","static Map<RegistryKey<Biome>, VariantTransformer> getOverworldVariantTransformers()"]},{"name":"static void setOverworldRiverBiome(RegistryKey<Biome> primary, RegistryKey<Biome> river)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.setOverworldRiverBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/set-overworld-river-biome.html","searchKeys":["setOverworldRiverBiome","static void setOverworldRiverBiome(RegistryKey<Biome> primary, RegistryKey<Biome> river)"]},{"name":"public final class InternalBiomeUtils","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/index.html","searchKeys":["InternalBiomeUtils","public final class InternalBiomeUtils"]},{"name":"static void ensureIdMapping(RegistryKey<Biome> biomeKey)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.ensureIdMapping","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/ensure-id-mapping.html","searchKeys":["ensureIdMapping","static void ensureIdMapping(RegistryKey<Biome> biomeKey)"]},{"name":"static int getRawId(RegistryKey<Biome> key)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.getRawId","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/get-raw-id.html","searchKeys":["getRawId","static int getRawId(RegistryKey<Biome> key)"]},{"name":"static void injectBiomesIntoClimate(LayerRandomnessSource random, Array<int> vanillaArray, OverworldClimate climate, IntConsumer result)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.injectBiomesIntoClimate","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/inject-biomes-into-climate.html","searchKeys":["injectBiomesIntoClimate","static void injectBiomesIntoClimate(LayerRandomnessSource random, Array<int> vanillaArray, OverworldClimate climate, IntConsumer result)"]},{"name":"static boolean isEdge(int north, int east, int south, int west, int center)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.isEdge","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/is-edge.html","searchKeys":["isEdge","static boolean isEdge(int north, int east, int south, int west, int center)"]},{"name":"static boolean neighborsOcean(int north, int east, int south, int west)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.neighborsOcean","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/neighbors-ocean.html","searchKeys":["neighborsOcean","static boolean neighborsOcean(int north, int east, int south, int west)"]},{"name":"static int searchForBiome(double reqWeightSum, int vanillaArrayWeight, List<WeightedBiomeEntry> moddedBiomes)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.searchForBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/search-for-biome.html","searchKeys":["searchForBiome","static int searchForBiome(double reqWeightSum, int vanillaArrayWeight, List<WeightedBiomeEntry> moddedBiomes)"]},{"name":"static int transformBiome(LayerRandomnessSource random, RegistryKey<Biome> existing, OverworldClimate climate)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.transformBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/transform-biome.html","searchKeys":["transformBiome","static int transformBiome(LayerRandomnessSource random, RegistryKey<Biome> existing, OverworldClimate climate)"]},{"name":"RegistryKey<Biome> transformBiome(RegistryKey<Biome> replaced, LayerRandomnessSource random, OverworldClimate climate)","description":"net.fabricmc.fabric.impl.biome.VariantTransformer.transformBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-variant-transformer/transform-biome.html","searchKeys":["transformBiome","RegistryKey<Biome> transformBiome(RegistryKey<Biome> replaced, LayerRandomnessSource random, OverworldClimate climate)"]},{"name":"public class SimpleLayerRandomnessSource implements LayerRandomnessSource","description":"net.fabricmc.fabric.impl.biome.SimpleLayerRandomnessSource","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-simple-layer-randomness-source/index.html","searchKeys":["SimpleLayerRandomnessSource","public class SimpleLayerRandomnessSource implements LayerRandomnessSource"]},{"name":"void SimpleLayerRandomnessSource(long seed)","description":"net.fabricmc.fabric.impl.biome.SimpleLayerRandomnessSource.SimpleLayerRandomnessSource","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-simple-layer-randomness-source/-simple-layer-randomness-source.html","searchKeys":["SimpleLayerRandomnessSource","void SimpleLayerRandomnessSource(long seed)"]},{"name":"PerlinNoiseSampler getNoiseSampler()","description":"net.fabricmc.fabric.impl.biome.SimpleLayerRandomnessSource.getNoiseSampler","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-simple-layer-randomness-source/get-noise-sampler.html","searchKeys":["getNoiseSampler","PerlinNoiseSampler getNoiseSampler()"]},{"name":"int nextInt(int bound)","description":"net.fabricmc.fabric.impl.biome.SimpleLayerRandomnessSource.nextInt","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-simple-layer-randomness-source/next-int.html","searchKeys":["nextInt","int nextInt(int bound)"]},{"name":"final class VariantTransformer","description":"net.fabricmc.fabric.impl.biome.VariantTransformer","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-variant-transformer/index.html","searchKeys":["VariantTransformer","final class VariantTransformer"]},{"name":"final class SubTransformer","description":"net.fabricmc.fabric.impl.biome.VariantTransformer.SubTransformer","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-variant-transformer/-sub-transformer/index.html","searchKeys":["SubTransformer","final class SubTransformer"]},{"name":"void addBiome(RegistryKey<Biome> variant, double chance, Array<OverworldClimate> climates)","description":"net.fabricmc.fabric.impl.biome.VariantTransformer.addBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-variant-transformer/add-biome.html","searchKeys":["addBiome","void addBiome(RegistryKey<Biome> variant, double chance, Array<OverworldClimate> climates)"]},{"name":"void addBiome(RegistryKey<Biome> biome, double weight)","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker.addBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/add-biome.html","searchKeys":["addBiome","void addBiome(RegistryKey<Biome> biome, double weight)"]},{"name":"final class WeightedBiomeEntry","description":"net.fabricmc.fabric.impl.biome.WeightedBiomeEntry","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-entry/index.html","searchKeys":["WeightedBiomeEntry","final class WeightedBiomeEntry"]},{"name":"void WeightedBiomeEntry(RegistryKey<Biome> biome, double weight, double upperWeightBound)","description":"net.fabricmc.fabric.impl.biome.WeightedBiomeEntry.WeightedBiomeEntry","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-entry/-weighted-biome-entry.html","searchKeys":["WeightedBiomeEntry","void WeightedBiomeEntry(RegistryKey<Biome> biome, double weight, double upperWeightBound)"]},{"name":"double getUpperWeightBound()","description":"net.fabricmc.fabric.impl.biome.WeightedBiomeEntry.getUpperWeightBound","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-entry/get-upper-weight-bound.html","searchKeys":["getUpperWeightBound","double getUpperWeightBound()"]},{"name":"double getWeight()","description":"net.fabricmc.fabric.impl.biome.WeightedBiomeEntry.getWeight","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-entry/get-weight.html","searchKeys":["getWeight","double getWeight()"]},{"name":"public final class WeightedBiomePicker","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/index.html","searchKeys":["WeightedBiomePicker","public final class WeightedBiomePicker"]},{"name":"void WeightedBiomePicker()","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker.WeightedBiomePicker","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/-weighted-biome-picker.html","searchKeys":["WeightedBiomePicker","void WeightedBiomePicker()"]},{"name":"double getCurrentWeightTotal()","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker.getCurrentWeightTotal","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/get-current-weight-total.html","searchKeys":["getCurrentWeightTotal","double getCurrentWeightTotal()"]},{"name":"RegistryKey<Biome> pickFromNoise(LayerRandomnessSource source, double x, double y, double z)","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker.pickFromNoise","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/pick-from-noise.html","searchKeys":["pickFromNoise","RegistryKey<Biome> pickFromNoise(LayerRandomnessSource source, double x, double y, double z)"]},{"name":"RegistryKey<Biome> pickRandom(LayerRandomnessSource random)","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker.pickRandom","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/pick-random.html","searchKeys":["pickRandom","RegistryKey<Biome> pickRandom(LayerRandomnessSource random)"]},{"name":"WeightedBiomeEntry search(double target)","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker.search","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/search.html","searchKeys":["search","WeightedBiomeEntry search(double target)"]},{"name":"public class BiomeModificationContextImpl implements BiomeModificationContext","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/index.html","searchKeys":["BiomeModificationContextImpl","public class BiomeModificationContextImpl implements BiomeModificationContext"]},{"name":"void BiomeModificationContextImpl(DynamicRegistryManager registries, Biome biome)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.BiomeModificationContextImpl","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/-biome-modification-context-impl.html","searchKeys":["BiomeModificationContextImpl","void BiomeModificationContextImpl(DynamicRegistryManager registries, Biome biome)"]},{"name":"void freeze()","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.freeze","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/freeze.html","searchKeys":["freeze","void freeze()"]},{"name":"public class BiomeModificationImpl","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationImpl","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-impl/index.html","searchKeys":["BiomeModificationImpl","public class BiomeModificationImpl"]},{"name":"void changeOrder(Identifier id, int order)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationImpl.changeOrder","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-impl/change-order.html","searchKeys":["changeOrder","void changeOrder(Identifier id, int order)"]},{"name":"void clearModifiers()","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationImpl.clearModifiers","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-impl/clear-modifiers.html","searchKeys":["clearModifiers","void clearModifiers()"]},{"name":"void modifyBiomes(DynamicRegistryManager.Impl impl)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationImpl.modifyBiomes","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-impl/modify-biomes.html","searchKeys":["modifyBiomes","void modifyBiomes(DynamicRegistryManager.Impl impl)"]},{"name":"public interface BiomeModificationTracker","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationTracker","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-tracker/index.html","searchKeys":["BiomeModificationTracker","public interface BiomeModificationTracker"]},{"name":"abstract Set<RegistryKey<Biome>> fabric_getModifiedBiomes()","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationTracker.fabric_getModifiedBiomes","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-tracker/fabric_get-modified-biomes.html","searchKeys":["fabric_getModifiedBiomes","abstract Set<RegistryKey<Biome>> fabric_getModifiedBiomes()"]},{"name":"Set<RegistryKey<Biome>> fabric_getModifiedBiomes()","description":"net.fabricmc.fabric.mixin.biome.modification.DynamicRegistryManagerImplMixin.fabric_getModifiedBiomes","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-dynamic-registry-manager-impl-mixin/fabric_get-modified-biomes.html","searchKeys":["fabric_getModifiedBiomes","Set<RegistryKey<Biome>> fabric_getModifiedBiomes()"]},{"name":"public class BiomeSelectionContextImpl implements BiomeSelectionContext","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/index.html","searchKeys":["BiomeSelectionContextImpl","public class BiomeSelectionContextImpl implements BiomeSelectionContext"]},{"name":"void BiomeSelectionContextImpl(DynamicRegistryManager dynamicRegistries, RegistryKey<Biome> key, Biome biome)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl.BiomeSelectionContextImpl","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/-biome-selection-context-impl.html","searchKeys":["BiomeSelectionContextImpl","void BiomeSelectionContextImpl(DynamicRegistryManager dynamicRegistries, RegistryKey<Biome> key, Biome biome)"]},{"name":"public final class BuiltInRegistryKeys","description":"net.fabricmc.fabric.impl.biome.modification.BuiltInRegistryKeys","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-built-in-registry-keys/index.html","searchKeys":["BuiltInRegistryKeys","public final class BuiltInRegistryKeys"]},{"name":"public interface AddHillsLayerAccessor","description":"net.fabricmc.fabric.mixin.biome.AddHillsLayerAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-add-hills-layer-accessor/index.html","searchKeys":["AddHillsLayerAccessor","public interface AddHillsLayerAccessor"]},{"name":"static Int2IntMap getBaseToVariantMap()","description":"net.fabricmc.fabric.mixin.biome.AddHillsLayerAccessor.getBaseToVariantMap","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-add-hills-layer-accessor/get-base-to-variant-map.html","searchKeys":["getBaseToVariantMap","static Int2IntMap getBaseToVariantMap()"]},{"name":"public interface BuiltinBiomesAccessor","description":"net.fabricmc.fabric.mixin.biome.BuiltinBiomesAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-builtin-biomes-accessor/index.html","searchKeys":["BuiltinBiomesAccessor","public interface BuiltinBiomesAccessor"]},{"name":"static Int2ObjectMap<RegistryKey<Biome>> getBY_RAW_ID()","description":"net.fabricmc.fabric.mixin.biome.BuiltinBiomesAccessor.getBY_RAW_ID","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-builtin-biomes-accessor/get-b-y_-r-a-w_-i-d.html","searchKeys":["getBY_RAW_ID","static Int2ObjectMap<RegistryKey<Biome>> getBY_RAW_ID()"]},{"name":"public class MixinAddEdgeBiomesLayer","description":"net.fabricmc.fabric.mixin.biome.MixinAddEdgeBiomesLayer","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-mixin-add-edge-biomes-layer/index.html","searchKeys":["MixinAddEdgeBiomesLayer","public class MixinAddEdgeBiomesLayer"]},{"name":"public class MixinAddHillsLayer","description":"net.fabricmc.fabric.mixin.biome.MixinAddHillsLayer","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-mixin-add-hills-layer/index.html","searchKeys":["MixinAddHillsLayer","public class MixinAddHillsLayer"]},{"name":"public class MixinAddRiversLayer","description":"net.fabricmc.fabric.mixin.biome.MixinAddRiversLayer","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-mixin-add-rivers-layer/index.html","searchKeys":["MixinAddRiversLayer","public class MixinAddRiversLayer"]},{"name":"public class MixinMultiNoiseBiomeSource","description":"net.fabricmc.fabric.mixin.biome.MixinMultiNoiseBiomeSource","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-mixin-multi-noise-biome-source/index.html","searchKeys":["MixinMultiNoiseBiomeSource","public class MixinMultiNoiseBiomeSource"]},{"name":"public class MixinSetBaseBiomesLayer","description":"net.fabricmc.fabric.mixin.biome.MixinSetBaseBiomesLayer","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-mixin-set-base-biomes-layer/index.html","searchKeys":["MixinSetBaseBiomesLayer","public class MixinSetBaseBiomesLayer"]},{"name":"public class MixinTheEndBiomeSource","description":"net.fabricmc.fabric.mixin.biome.MixinTheEndBiomeSource","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-mixin-the-end-biome-source/index.html","searchKeys":["MixinTheEndBiomeSource","public class MixinTheEndBiomeSource"]},{"name":"public interface MultiNoiseBiomeSourceAccessor","description":"net.fabricmc.fabric.mixin.biome.MultiNoiseBiomeSourceAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-multi-noise-biome-source-accessor/index.html","searchKeys":["MultiNoiseBiomeSourceAccessor","public interface MultiNoiseBiomeSourceAccessor"]},{"name":"abstract List<Pair<Biome.MixedNoisePoint, Supplier<Biome>>> getBiomePoints()","description":"net.fabricmc.fabric.mixin.biome.MultiNoiseBiomeSourceAccessor.getBiomePoints","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-multi-noise-biome-source-accessor/get-biome-points.html","searchKeys":["getBiomePoints","abstract List<Pair<Biome.MixedNoisePoint, Supplier<Biome>>> getBiomePoints()"]},{"name":"abstract void setBiomePoints(List<Pair<Biome.MixedNoisePoint, Supplier<Biome>>> list)","description":"net.fabricmc.fabric.mixin.biome.MultiNoiseBiomeSourceAccessor.setBiomePoints","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-multi-noise-biome-source-accessor/set-biome-points.html","searchKeys":["setBiomePoints","abstract void setBiomePoints(List<Pair<Biome.MixedNoisePoint, Supplier<Biome>>> list)"]},{"name":"public interface VanillaLayeredBiomeSourceAccessor","description":"net.fabricmc.fabric.mixin.biome.VanillaLayeredBiomeSourceAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-vanilla-layered-biome-source-accessor/index.html","searchKeys":["VanillaLayeredBiomeSourceAccessor","public interface VanillaLayeredBiomeSourceAccessor"]},{"name":"static List<RegistryKey<Biome>> getBIOMES()","description":"net.fabricmc.fabric.mixin.biome.VanillaLayeredBiomeSourceAccessor.getBIOMES","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-vanilla-layered-biome-source-accessor/get-b-i-o-m-e-s.html","searchKeys":["getBIOMES","static List<RegistryKey<Biome>> getBIOMES()"]},{"name":"static void setBIOMES(List<RegistryKey<Biome>> biomes)","description":"net.fabricmc.fabric.mixin.biome.VanillaLayeredBiomeSourceAccessor.setBIOMES","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-vanilla-layered-biome-source-accessor/set-b-i-o-m-e-s.html","searchKeys":["setBIOMES","static void setBIOMES(List<RegistryKey<Biome>> biomes)"]},{"name":"public interface BiomeAccessor","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/index.html","searchKeys":["BiomeAccessor","public interface BiomeAccessor"]},{"name":"abstract GenerationSettings fabric_getGenerationSettings()","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor.fabric_getGenerationSettings","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/fabric_get-generation-settings.html","searchKeys":["fabric_getGenerationSettings","abstract GenerationSettings fabric_getGenerationSettings()"]},{"name":"abstract SpawnSettings fabric_getSpawnSettings()","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor.fabric_getSpawnSettings","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/fabric_get-spawn-settings.html","searchKeys":["fabric_getSpawnSettings","abstract SpawnSettings fabric_getSpawnSettings()"]},{"name":"abstract Biome.Weather fabric_getWeather()","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor.fabric_getWeather","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/fabric_get-weather.html","searchKeys":["fabric_getWeather","abstract Biome.Weather fabric_getWeather()"]},{"name":"abstract void fabric_setCategory(Biome.Category category)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor.fabric_setCategory","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/fabric_set-category.html","searchKeys":["fabric_setCategory","abstract void fabric_setCategory(Biome.Category category)"]},{"name":"abstract void fabric_setDepth(float depth)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor.fabric_setDepth","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/fabric_set-depth.html","searchKeys":["fabric_setDepth","abstract void fabric_setDepth(float depth)"]},{"name":"abstract void fabric_setScale(float scale)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor.fabric_setScale","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/fabric_set-scale.html","searchKeys":["fabric_setScale","abstract void fabric_setScale(float scale)"]},{"name":"public interface BiomeEffectsAccessor","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/index.html","searchKeys":["BiomeEffectsAccessor","public interface BiomeEffectsAccessor"]},{"name":"abstract void fabric_setAdditionsSound(Optional<BiomeAdditionsSound> value)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setAdditionsSound","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-additions-sound.html","searchKeys":["fabric_setAdditionsSound","abstract void fabric_setAdditionsSound(Optional<BiomeAdditionsSound> value)"]},{"name":"abstract void fabric_setFogColor(int value)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setFogColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-fog-color.html","searchKeys":["fabric_setFogColor","abstract void fabric_setFogColor(int value)"]},{"name":"abstract void fabric_setFoliageColor(Optional<Integer> value)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setFoliageColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-foliage-color.html","searchKeys":["fabric_setFoliageColor","abstract void fabric_setFoliageColor(Optional<Integer> value)"]},{"name":"abstract void fabric_setGrassColor(Optional<Integer> value)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setGrassColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-grass-color.html","searchKeys":["fabric_setGrassColor","abstract void fabric_setGrassColor(Optional<Integer> value)"]},{"name":"abstract void fabric_setGrassColorModifier(BiomeEffects.GrassColorModifier value)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setGrassColorModifier","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-grass-color-modifier.html","searchKeys":["fabric_setGrassColorModifier","abstract void fabric_setGrassColorModifier(BiomeEffects.GrassColorModifier value)"]},{"name":"abstract void fabric_setLoopSound(Optional<SoundEvent> value)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setLoopSound","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-loop-sound.html","searchKeys":["fabric_setLoopSound","abstract void fabric_setLoopSound(Optional<SoundEvent> value)"]},{"name":"abstract void fabric_setMoodSound(Optional<BiomeMoodSound> value)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setMoodSound","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-mood-sound.html","searchKeys":["fabric_setMoodSound","abstract void fabric_setMoodSound(Optional<BiomeMoodSound> value)"]},{"name":"abstract void fabric_setMusic(Optional<MusicSound> value)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setMusic","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-music.html","searchKeys":["fabric_setMusic","abstract void fabric_setMusic(Optional<MusicSound> value)"]},{"name":"abstract void fabric_setParticleConfig(Optional<BiomeParticleConfig> value)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setParticleConfig","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-particle-config.html","searchKeys":["fabric_setParticleConfig","abstract void fabric_setParticleConfig(Optional<BiomeParticleConfig> value)"]},{"name":"abstract void fabric_setSkyColor(int value)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setSkyColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-sky-color.html","searchKeys":["fabric_setSkyColor","abstract void fabric_setSkyColor(int value)"]},{"name":"abstract void fabric_setWaterColor(int value)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setWaterColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-water-color.html","searchKeys":["fabric_setWaterColor","abstract void fabric_setWaterColor(int value)"]},{"name":"abstract void fabric_setWaterFogColor(int value)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setWaterFogColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-water-fog-color.html","searchKeys":["fabric_setWaterFogColor","abstract void fabric_setWaterFogColor(int value)"]},{"name":"public interface BiomeWeatherAccessor","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/index.html","searchKeys":["BiomeWeatherAccessor","public interface BiomeWeatherAccessor"]},{"name":"abstract float getDownfall()","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.getDownfall","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/get-downfall.html","searchKeys":["getDownfall","abstract float getDownfall()"]},{"name":"abstract Biome.Precipitation getPrecipitation()","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.getPrecipitation","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/get-precipitation.html","searchKeys":["getPrecipitation","abstract Biome.Precipitation getPrecipitation()"]},{"name":"abstract float getTemperature()","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.getTemperature","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/get-temperature.html","searchKeys":["getTemperature","abstract float getTemperature()"]},{"name":"abstract Biome.TemperatureModifier getTemperatureModifier()","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.getTemperatureModifier","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/get-temperature-modifier.html","searchKeys":["getTemperatureModifier","abstract Biome.TemperatureModifier getTemperatureModifier()"]},{"name":"public class DynamicRegistryManagerImplMixin implements BiomeModificationTracker","description":"net.fabricmc.fabric.mixin.biome.modification.DynamicRegistryManagerImplMixin","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-dynamic-registry-manager-impl-mixin/index.html","searchKeys":["DynamicRegistryManagerImplMixin","public class DynamicRegistryManagerImplMixin implements BiomeModificationTracker"]},{"name":"public interface GenerationSettingsAccessor","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/index.html","searchKeys":["GenerationSettingsAccessor","public interface GenerationSettingsAccessor"]},{"name":"abstract Map<GenerationStep.Carver, List<Supplier<ConfiguredCarver<? extends Object>>>> fabric_getCarvers()","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_getCarvers","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_get-carvers.html","searchKeys":["fabric_getCarvers","abstract Map<GenerationStep.Carver, List<Supplier<ConfiguredCarver<? extends Object>>>> fabric_getCarvers()"]},{"name":"abstract List<List<Supplier<ConfiguredFeature<? extends Object, ? extends Object>>>> fabric_getFeatures()","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_getFeatures","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_get-features.html","searchKeys":["fabric_getFeatures","abstract List<List<Supplier<ConfiguredFeature<? extends Object, ? extends Object>>>> fabric_getFeatures()"]},{"name":"abstract List<ConfiguredFeature<? extends Object, ? extends Object>> fabric_getFlowerFeatures()","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_getFlowerFeatures","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_get-flower-features.html","searchKeys":["fabric_getFlowerFeatures","abstract List<ConfiguredFeature<? extends Object, ? extends Object>> fabric_getFlowerFeatures()"]},{"name":"abstract List<Supplier<ConfiguredStructureFeature<? extends Object, ? extends Object>>> fabric_getStructureFeatures()","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_getStructureFeatures","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_get-structure-features.html","searchKeys":["fabric_getStructureFeatures","abstract List<Supplier<ConfiguredStructureFeature<? extends Object, ? extends Object>>> fabric_getStructureFeatures()"]},{"name":"abstract Supplier<ConfiguredSurfaceBuilder<? extends Object>> fabric_getSurfaceBuilder()","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_getSurfaceBuilder","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_get-surface-builder.html","searchKeys":["fabric_getSurfaceBuilder","abstract Supplier<ConfiguredSurfaceBuilder<? extends Object>> fabric_getSurfaceBuilder()"]},{"name":"abstract void fabric_setCarvers(Map<GenerationStep.Carver, List<Supplier<ConfiguredCarver<? extends Object>>>> value)","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_setCarvers","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_set-carvers.html","searchKeys":["fabric_setCarvers","abstract void fabric_setCarvers(Map<GenerationStep.Carver, List<Supplier<ConfiguredCarver<? extends Object>>>> value)"]},{"name":"abstract void fabric_setFeatures(List<List<Supplier<ConfiguredFeature<? extends Object, ? extends Object>>>> value)","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_setFeatures","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_set-features.html","searchKeys":["fabric_setFeatures","abstract void fabric_setFeatures(List<List<Supplier<ConfiguredFeature<? extends Object, ? extends Object>>>> value)"]},{"name":"abstract void fabric_setFlowerFeatures(List<ConfiguredFeature<? extends Object, ? extends Object>> value)","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_setFlowerFeatures","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_set-flower-features.html","searchKeys":["fabric_setFlowerFeatures","abstract void fabric_setFlowerFeatures(List<ConfiguredFeature<? extends Object, ? extends Object>> value)"]},{"name":"abstract void fabric_setStructureFeatures(List<Supplier<ConfiguredStructureFeature<? extends Object, ? extends Object>>> value)","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_setStructureFeatures","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_set-structure-features.html","searchKeys":["fabric_setStructureFeatures","abstract void fabric_setStructureFeatures(List<Supplier<ConfiguredStructureFeature<? extends Object, ? extends Object>>> value)"]},{"name":"abstract void fabric_setSurfaceBuilder(Supplier<ConfiguredSurfaceBuilder<? extends Object>> value)","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_setSurfaceBuilder","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_set-surface-builder.html","searchKeys":["fabric_setSurfaceBuilder","abstract void fabric_setSurfaceBuilder(Supplier<ConfiguredSurfaceBuilder<? extends Object>> value)"]},{"name":"public class RegistryOpsMixin","description":"net.fabricmc.fabric.mixin.biome.modification.RegistryOpsMixin","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-registry-ops-mixin/index.html","searchKeys":["RegistryOpsMixin","public class RegistryOpsMixin"]},{"name":"public interface SpawnDensityAccessor","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnDensityAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-density-accessor/index.html","searchKeys":["SpawnDensityAccessor","public interface SpawnDensityAccessor"]},{"name":"public interface SpawnSettingsAccessor","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/index.html","searchKeys":["SpawnSettingsAccessor","public interface SpawnSettingsAccessor"]},{"name":"abstract Map<EntityType<? extends Object>, SpawnSettings.SpawnDensity> fabric_getSpawnCosts()","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor.fabric_getSpawnCosts","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/fabric_get-spawn-costs.html","searchKeys":["fabric_getSpawnCosts","abstract Map<EntityType<? extends Object>, SpawnSettings.SpawnDensity> fabric_getSpawnCosts()"]},{"name":"abstract Map<SpawnGroup, List<SpawnSettings.SpawnEntry>> fabric_getSpawners()","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor.fabric_getSpawners","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/fabric_get-spawners.html","searchKeys":["fabric_getSpawners","abstract Map<SpawnGroup, List<SpawnSettings.SpawnEntry>> fabric_getSpawners()"]},{"name":"abstract void fabric_setCreatureSpawnProbability(float probability)","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor.fabric_setCreatureSpawnProbability","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/fabric_set-creature-spawn-probability.html","searchKeys":["fabric_setCreatureSpawnProbability","abstract void fabric_setCreatureSpawnProbability(float probability)"]},{"name":"abstract void fabric_setPlayerSpawnFriendly(boolean playerSpawnFriendly)","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor.fabric_setPlayerSpawnFriendly","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/fabric_set-player-spawn-friendly.html","searchKeys":["fabric_setPlayerSpawnFriendly","abstract void fabric_setPlayerSpawnFriendly(boolean playerSpawnFriendly)"]},{"name":"abstract void fabric_setSpawnCosts(Map<EntityType<? extends Object>, SpawnSettings.SpawnDensity> spawnCosts)","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor.fabric_setSpawnCosts","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/fabric_set-spawn-costs.html","searchKeys":["fabric_setSpawnCosts","abstract void fabric_setSpawnCosts(Map<EntityType<? extends Object>, SpawnSettings.SpawnDensity> spawnCosts)"]},{"name":"abstract void fabric_setSpawners(Map<SpawnGroup, List<SpawnSettings.SpawnEntry>> spawners)","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor.fabric_setSpawners","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/fabric_set-spawners.html","searchKeys":["fabric_setSpawners","abstract void fabric_setSpawners(Map<SpawnGroup, List<SpawnSettings.SpawnEntry>> spawners)"]}]
