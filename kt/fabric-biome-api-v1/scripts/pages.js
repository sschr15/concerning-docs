var pages = [{"name":"open class BiomeModification","description":"net.fabricmc.fabric.api.biome.v1.BiomeModification","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification/index.html","searchKeys":["BiomeModification","open class BiomeModification"]},{"name":" open fun BiomeModification(id: Identifier)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModification.BiomeModification","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification/-biome-modification.html","searchKeys":["BiomeModification"," open fun BiomeModification(id: Identifier)"]},{"name":"interface BiomeModificationContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/index.html","searchKeys":["BiomeModificationContext","interface BiomeModificationContext"]},{"name":" interface EffectsContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/index.html","searchKeys":["EffectsContext"," interface EffectsContext"]},{"name":" open fun clearAdditionsSound()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearAdditionsSound","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-additions-sound.html","searchKeys":["clearAdditionsSound"," open fun clearAdditionsSound()"]},{"name":" open fun clearAmbientSound()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearAmbientSound","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-ambient-sound.html","searchKeys":["clearAmbientSound"," open fun clearAmbientSound()"]},{"name":" open fun clearFoliageColor()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearFoliageColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-foliage-color.html","searchKeys":["clearFoliageColor"," open fun clearFoliageColor()"]},{"name":" open fun clearGrassColor()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearGrassColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-grass-color.html","searchKeys":["clearGrassColor"," open fun clearGrassColor()"]},{"name":" open fun clearMoodSound()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearMoodSound","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-mood-sound.html","searchKeys":["clearMoodSound"," open fun clearMoodSound()"]},{"name":" open fun clearMusic()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearMusic","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-music.html","searchKeys":["clearMusic"," open fun clearMusic()"]},{"name":" open fun clearParticleConfig()","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.clearParticleConfig","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/clear-particle-config.html","searchKeys":["clearParticleConfig"," open fun clearParticleConfig()"]},{"name":" abstract fun setFogColor(color: Int)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.setFogColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/set-fog-color.html","searchKeys":["setFogColor"," abstract fun setFogColor(color: Int)"]},{"name":" abstract fun setGrassColorModifier(colorModifier: BiomeEffects.GrassColorModifier)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.setGrassColorModifier","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/set-grass-color-modifier.html","searchKeys":["setGrassColorModifier"," abstract fun setGrassColorModifier(colorModifier: BiomeEffects.GrassColorModifier)"]},{"name":" abstract fun setSkyColor(color: Int)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.setSkyColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/set-sky-color.html","searchKeys":["setSkyColor"," abstract fun setSkyColor(color: Int)"]},{"name":" abstract fun setWaterColor(color: Int)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.setWaterColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/set-water-color.html","searchKeys":["setWaterColor"," abstract fun setWaterColor(color: Int)"]},{"name":" abstract fun setWaterFogColor(color: Int)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.EffectsContext.setWaterFogColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-effects-context/set-water-fog-color.html","searchKeys":["setWaterFogColor"," abstract fun setWaterFogColor(color: Int)"]},{"name":" interface GenerationSettingsContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/index.html","searchKeys":["GenerationSettingsContext"," interface GenerationSettingsContext"]},{"name":" open fun addBuiltInCarver(step: GenerationStep.Carver, configuredCarver: ConfiguredCarver<out Any>)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.addBuiltInCarver","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/add-built-in-carver.html","searchKeys":["addBuiltInCarver"," open fun addBuiltInCarver(step: GenerationStep.Carver, configuredCarver: ConfiguredCarver<out Any>)"]},{"name":" open fun addBuiltInFeature(step: GenerationStep.Feature, configuredFeature: ConfiguredFeature<out Any, out Any>)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.addBuiltInFeature","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/add-built-in-feature.html","searchKeys":["addBuiltInFeature"," open fun addBuiltInFeature(step: GenerationStep.Feature, configuredFeature: ConfiguredFeature<out Any, out Any>)"]},{"name":" open fun addBuiltInStructure(configuredStructure: ConfiguredStructureFeature<out Any, out Any>)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.addBuiltInStructure","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/add-built-in-structure.html","searchKeys":["addBuiltInStructure"," open fun addBuiltInStructure(configuredStructure: ConfiguredStructureFeature<out Any, out Any>)"]},{"name":" abstract fun addCarver(step: GenerationStep.Carver, carverKey: RegistryKey<ConfiguredCarver<out Any>>)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.addCarver","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/add-carver.html","searchKeys":["addCarver"," abstract fun addCarver(step: GenerationStep.Carver, carverKey: RegistryKey<ConfiguredCarver<out Any>>)"]},{"name":"open fun addCarver(biomeSelector: Predicate<BiomeSelectionContext>, step: GenerationStep.Carver, configuredCarverKey: RegistryKey<ConfiguredCarver<out Any>>)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModifications.addCarver","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modifications/add-carver.html","searchKeys":["addCarver","open fun addCarver(biomeSelector: Predicate<BiomeSelectionContext>, step: GenerationStep.Carver, configuredCarverKey: RegistryKey<ConfiguredCarver<out Any>>)"]},{"name":" abstract fun addFeature(step: GenerationStep.Feature, configuredFeatureKey: RegistryKey<ConfiguredFeature<out Any, out Any>>)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.addFeature","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/add-feature.html","searchKeys":["addFeature"," abstract fun addFeature(step: GenerationStep.Feature, configuredFeatureKey: RegistryKey<ConfiguredFeature<out Any, out Any>>)"]},{"name":"open fun addFeature(biomeSelector: Predicate<BiomeSelectionContext>, step: GenerationStep.Feature, configuredFeatureKey: RegistryKey<ConfiguredFeature<out Any, out Any>>)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModifications.addFeature","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modifications/add-feature.html","searchKeys":["addFeature","open fun addFeature(biomeSelector: Predicate<BiomeSelectionContext>, step: GenerationStep.Feature, configuredFeatureKey: RegistryKey<ConfiguredFeature<out Any, out Any>>)"]},{"name":" abstract fun addStructure(configuredStructureKey: RegistryKey<ConfiguredStructureFeature<out Any, out Any>>)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.addStructure","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/add-structure.html","searchKeys":["addStructure"," abstract fun addStructure(configuredStructureKey: RegistryKey<ConfiguredStructureFeature<out Any, out Any>>)"]},{"name":"open fun addStructure(biomeSelector: Predicate<BiomeSelectionContext>, configuredStructureKey: RegistryKey<ConfiguredStructureFeature<out Any, out Any>>)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModifications.addStructure","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modifications/add-structure.html","searchKeys":["addStructure","open fun addStructure(biomeSelector: Predicate<BiomeSelectionContext>, configuredStructureKey: RegistryKey<ConfiguredStructureFeature<out Any, out Any>>)"]},{"name":" open fun removeBuiltInStructure(configuredStructure: ConfiguredStructureFeature<out Any, out Any>): Boolean","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.removeBuiltInStructure","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/remove-built-in-structure.html","searchKeys":["removeBuiltInStructure"," open fun removeBuiltInStructure(configuredStructure: ConfiguredStructureFeature<out Any, out Any>): Boolean"]},{"name":" open fun setBuiltInSurfaceBuilder(configuredSurfaceBuilder: ConfiguredSurfaceBuilder<out Any>)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.setBuiltInSurfaceBuilder","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/set-built-in-surface-builder.html","searchKeys":["setBuiltInSurfaceBuilder"," open fun setBuiltInSurfaceBuilder(configuredSurfaceBuilder: ConfiguredSurfaceBuilder<out Any>)"]},{"name":" abstract fun setSurfaceBuilder(surfaceBuilderKey: RegistryKey<ConfiguredSurfaceBuilder<out Any>>)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.GenerationSettingsContext.setSurfaceBuilder","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-generation-settings-context/set-surface-builder.html","searchKeys":["setSurfaceBuilder"," abstract fun setSurfaceBuilder(surfaceBuilderKey: RegistryKey<ConfiguredSurfaceBuilder<out Any>>)"]},{"name":" interface SpawnSettingsContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/index.html","searchKeys":["SpawnSettingsContext"," interface SpawnSettingsContext"]},{"name":" abstract fun addSpawn(spawnGroup: SpawnGroup, spawnEntry: SpawnSettings.SpawnEntry)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.addSpawn","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/add-spawn.html","searchKeys":["addSpawn"," abstract fun addSpawn(spawnGroup: SpawnGroup, spawnEntry: SpawnSettings.SpawnEntry)"]},{"name":"open fun addSpawn(biomeSelector: Predicate<BiomeSelectionContext>, spawnGroup: SpawnGroup, entityType: EntityType<out Any>, weight: Int, minGroupSize: Int, maxGroupSize: Int)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModifications.addSpawn","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modifications/add-spawn.html","searchKeys":["addSpawn","open fun addSpawn(biomeSelector: Predicate<BiomeSelectionContext>, spawnGroup: SpawnGroup, entityType: EntityType<out Any>, weight: Int, minGroupSize: Int, maxGroupSize: Int)"]},{"name":" abstract fun clearSpawnCost(entityType: EntityType<out Any>)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.clearSpawnCost","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/clear-spawn-cost.html","searchKeys":["clearSpawnCost"," abstract fun clearSpawnCost(entityType: EntityType<out Any>)"]},{"name":" abstract fun removeSpawns(predicate: BiPredicate<SpawnGroup, SpawnSettings.SpawnEntry>): Boolean","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.removeSpawns","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/remove-spawns.html","searchKeys":["removeSpawns"," abstract fun removeSpawns(predicate: BiPredicate<SpawnGroup, SpawnSettings.SpawnEntry>): Boolean"]},{"name":" open fun removeSpawnsOfEntityType(entityType: EntityType<out Any>): Boolean","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.removeSpawnsOfEntityType","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/remove-spawns-of-entity-type.html","searchKeys":["removeSpawnsOfEntityType"," open fun removeSpawnsOfEntityType(entityType: EntityType<out Any>): Boolean"]},{"name":" abstract fun setCreatureSpawnProbability(probability: Float)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.setCreatureSpawnProbability","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/set-creature-spawn-probability.html","searchKeys":["setCreatureSpawnProbability"," abstract fun setCreatureSpawnProbability(probability: Float)"]},{"name":" abstract fun setPlayerSpawnFriendly(playerSpawnFriendly: Boolean)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.setPlayerSpawnFriendly","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/set-player-spawn-friendly.html","searchKeys":["setPlayerSpawnFriendly"," abstract fun setPlayerSpawnFriendly(playerSpawnFriendly: Boolean)"]},{"name":" abstract fun setSpawnCost(entityType: EntityType<out Any>, mass: Double, gravityLimit: Double)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.SpawnSettingsContext.setSpawnCost","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-spawn-settings-context/set-spawn-cost.html","searchKeys":["setSpawnCost"," abstract fun setSpawnCost(entityType: EntityType<out Any>, mass: Double, gravityLimit: Double)"]},{"name":" interface WeatherContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.WeatherContext","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-weather-context/index.html","searchKeys":["WeatherContext"," interface WeatherContext"]},{"name":" abstract fun setDownfall(downfall: Float)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.WeatherContext.setDownfall","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-weather-context/set-downfall.html","searchKeys":["setDownfall"," abstract fun setDownfall(downfall: Float)"]},{"name":" abstract fun setDownfall(downfall: Float)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.setDownfall","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/set-downfall.html","searchKeys":["setDownfall"," abstract fun setDownfall(downfall: Float)"]},{"name":" abstract fun setPrecipitation(precipitation: Biome.Precipitation)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.WeatherContext.setPrecipitation","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-weather-context/set-precipitation.html","searchKeys":["setPrecipitation"," abstract fun setPrecipitation(precipitation: Biome.Precipitation)"]},{"name":" abstract fun setPrecipitation(precipitation: Biome.Precipitation)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.setPrecipitation","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/set-precipitation.html","searchKeys":["setPrecipitation"," abstract fun setPrecipitation(precipitation: Biome.Precipitation)"]},{"name":" abstract fun setTemperature(temperature: Float)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.WeatherContext.setTemperature","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-weather-context/set-temperature.html","searchKeys":["setTemperature"," abstract fun setTemperature(temperature: Float)"]},{"name":" abstract fun setTemperature(temperature: Float)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.setTemperature","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/set-temperature.html","searchKeys":["setTemperature"," abstract fun setTemperature(temperature: Float)"]},{"name":" abstract fun setTemperatureModifier(temperatureModifier: Biome.TemperatureModifier)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.WeatherContext.setTemperatureModifier","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/-weather-context/set-temperature-modifier.html","searchKeys":["setTemperatureModifier"," abstract fun setTemperatureModifier(temperatureModifier: Biome.TemperatureModifier)"]},{"name":" abstract fun setTemperatureModifier(temperatureModifier: Biome.TemperatureModifier)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.setTemperatureModifier","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/set-temperature-modifier.html","searchKeys":["setTemperatureModifier"," abstract fun setTemperatureModifier(temperatureModifier: Biome.TemperatureModifier)"]},{"name":" abstract fun getEffects(): BiomeModificationContext.EffectsContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.getEffects","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/get-effects.html","searchKeys":["getEffects"," abstract fun getEffects(): BiomeModificationContext.EffectsContext"]},{"name":" abstract fun getGenerationSettings(): BiomeModificationContext.GenerationSettingsContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.getGenerationSettings","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/get-generation-settings.html","searchKeys":["getGenerationSettings"," abstract fun getGenerationSettings(): BiomeModificationContext.GenerationSettingsContext"]},{"name":" abstract fun getSpawnSettings(): BiomeModificationContext.SpawnSettingsContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.getSpawnSettings","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/get-spawn-settings.html","searchKeys":["getSpawnSettings"," abstract fun getSpawnSettings(): BiomeModificationContext.SpawnSettingsContext"]},{"name":" abstract fun getWeather(): BiomeModificationContext.WeatherContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.getWeather","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/get-weather.html","searchKeys":["getWeather"," abstract fun getWeather(): BiomeModificationContext.WeatherContext"]},{"name":" abstract fun setCategory(category: Biome.Category)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.setCategory","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/set-category.html","searchKeys":["setCategory"," abstract fun setCategory(category: Biome.Category)"]},{"name":"open fun setCategory(category: Biome.Category)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.setCategory","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/set-category.html","searchKeys":["setCategory","open fun setCategory(category: Biome.Category)"]},{"name":" abstract fun setDepth(depth: Float)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.setDepth","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/set-depth.html","searchKeys":["setDepth"," abstract fun setDepth(depth: Float)"]},{"name":"open fun setDepth(depth: Float)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.setDepth","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/set-depth.html","searchKeys":["setDepth","open fun setDepth(depth: Float)"]},{"name":" abstract fun setScale(scale: Float)","description":"net.fabricmc.fabric.api.biome.v1.BiomeModificationContext.setScale","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modification-context/set-scale.html","searchKeys":["setScale"," abstract fun setScale(scale: Float)"]},{"name":"open fun setScale(scale: Float)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.setScale","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/set-scale.html","searchKeys":["setScale","open fun setScale(scale: Float)"]},{"name":"class BiomeModifications","description":"net.fabricmc.fabric.api.biome.v1.BiomeModifications","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modifications/index.html","searchKeys":["BiomeModifications","class BiomeModifications"]},{"name":"open fun create(id: Identifier): BiomeModification","description":"net.fabricmc.fabric.api.biome.v1.BiomeModifications.create","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-modifications/create.html","searchKeys":["create","open fun create(id: Identifier): BiomeModification"]},{"name":" open fun create(gravityLimit: Double, mass: Double): SpawnSettings.SpawnDensity","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnDensityAccessor.create","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-density-accessor/create.html","searchKeys":["create"," open fun create(gravityLimit: Double, mass: Double): SpawnSettings.SpawnDensity"]},{"name":"interface BiomeSelectionContext","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/index.html","searchKeys":["BiomeSelectionContext","interface BiomeSelectionContext"]},{"name":" abstract fun getBiome(): Biome","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.getBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/get-biome.html","searchKeys":["getBiome"," abstract fun getBiome(): Biome"]},{"name":" abstract fun getBiomeKey(): RegistryKey<Biome>","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.getBiomeKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/get-biome-key.html","searchKeys":["getBiomeKey"," abstract fun getBiomeKey(): RegistryKey<Biome>"]},{"name":"open fun getBiomeKey(): RegistryKey<Biome>","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl.getBiomeKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/get-biome-key.html","searchKeys":["getBiomeKey","open fun getBiomeKey(): RegistryKey<Biome>"]},{"name":" abstract fun getFeatureKey(configuredFeature: ConfiguredFeature<out Any, out Any>): Optional<RegistryKey<ConfiguredFeature<out Any, out Any>>>","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.getFeatureKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/get-feature-key.html","searchKeys":["getFeatureKey"," abstract fun getFeatureKey(configuredFeature: ConfiguredFeature<out Any, out Any>): Optional<RegistryKey<ConfiguredFeature<out Any, out Any>>>"]},{"name":"open fun getFeatureKey(configuredFeature: ConfiguredFeature<out Any, out Any>): Optional<RegistryKey<ConfiguredFeature<out Any, out Any>>>","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl.getFeatureKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/get-feature-key.html","searchKeys":["getFeatureKey","open fun getFeatureKey(configuredFeature: ConfiguredFeature<out Any, out Any>): Optional<RegistryKey<ConfiguredFeature<out Any, out Any>>>"]},{"name":" abstract fun getStructureKey(configuredStructure: ConfiguredStructureFeature<out Any, out Any>): Optional<RegistryKey<ConfiguredStructureFeature<out Any, out Any>>>","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.getStructureKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/get-structure-key.html","searchKeys":["getStructureKey"," abstract fun getStructureKey(configuredStructure: ConfiguredStructureFeature<out Any, out Any>): Optional<RegistryKey<ConfiguredStructureFeature<out Any, out Any>>>"]},{"name":"open fun getStructureKey(configuredStructure: ConfiguredStructureFeature<out Any, out Any>): Optional<RegistryKey<ConfiguredStructureFeature<out Any, out Any>>>","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl.getStructureKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/get-structure-key.html","searchKeys":["getStructureKey","open fun getStructureKey(configuredStructure: ConfiguredStructureFeature<out Any, out Any>): Optional<RegistryKey<ConfiguredStructureFeature<out Any, out Any>>>"]},{"name":" abstract fun getSurfaceBuilderKey(): Optional<RegistryKey<ConfiguredSurfaceBuilder<out Any>>>","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.getSurfaceBuilderKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/get-surface-builder-key.html","searchKeys":["getSurfaceBuilderKey"," abstract fun getSurfaceBuilderKey(): Optional<RegistryKey<ConfiguredSurfaceBuilder<out Any>>>"]},{"name":"open fun getSurfaceBuilderKey(): Optional<RegistryKey<ConfiguredSurfaceBuilder<out Any>>>","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl.getSurfaceBuilderKey","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/get-surface-builder-key.html","searchKeys":["getSurfaceBuilderKey","open fun getSurfaceBuilderKey(): Optional<RegistryKey<ConfiguredSurfaceBuilder<out Any>>>"]},{"name":" open fun hasBuiltInFeature(configuredFeature: ConfiguredFeature<out Any, out Any>): Boolean","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.hasBuiltInFeature","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/has-built-in-feature.html","searchKeys":["hasBuiltInFeature"," open fun hasBuiltInFeature(configuredFeature: ConfiguredFeature<out Any, out Any>): Boolean"]},{"name":" open fun hasBuiltInStructure(configuredStructure: ConfiguredStructureFeature<out Any, out Any>): Boolean","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.hasBuiltInStructure","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/has-built-in-structure.html","searchKeys":["hasBuiltInStructure"," open fun hasBuiltInStructure(configuredStructure: ConfiguredStructureFeature<out Any, out Any>): Boolean"]},{"name":" open fun hasBuiltInSurfaceBuilder(surfaceBuilder: ConfiguredSurfaceBuilder<out Any>): Boolean","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.hasBuiltInSurfaceBuilder","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/has-built-in-surface-builder.html","searchKeys":["hasBuiltInSurfaceBuilder"," open fun hasBuiltInSurfaceBuilder(surfaceBuilder: ConfiguredSurfaceBuilder<out Any>): Boolean"]},{"name":" open fun hasFeature(key: RegistryKey<ConfiguredFeature<out Any, out Any>>): Boolean","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.hasFeature","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/has-feature.html","searchKeys":["hasFeature"," open fun hasFeature(key: RegistryKey<ConfiguredFeature<out Any, out Any>>): Boolean"]},{"name":" open fun hasStructure(key: RegistryKey<ConfiguredStructureFeature<out Any, out Any>>): Boolean","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.hasStructure","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/has-structure.html","searchKeys":["hasStructure"," open fun hasStructure(key: RegistryKey<ConfiguredStructureFeature<out Any, out Any>>): Boolean"]},{"name":" open fun hasSurfaceBuilder(key: RegistryKey<ConfiguredSurfaceBuilder<out Any>>): Boolean","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectionContext.hasSurfaceBuilder","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selection-context/has-surface-builder.html","searchKeys":["hasSurfaceBuilder"," open fun hasSurfaceBuilder(key: RegistryKey<ConfiguredSurfaceBuilder<out Any>>): Boolean"]},{"name":"class BiomeSelectors","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/index.html","searchKeys":["BiomeSelectors","class BiomeSelectors"]},{"name":"open fun all(): Predicate<BiomeSelectionContext>","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.all","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/all.html","searchKeys":["all","open fun all(): Predicate<BiomeSelectionContext>"]},{"name":"open fun builtIn(): Predicate<BiomeSelectionContext>","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.builtIn","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/built-in.html","searchKeys":["builtIn","open fun builtIn(): Predicate<BiomeSelectionContext>"]},{"name":"open fun categories(categories: Array<Biome.Category>): Predicate<BiomeSelectionContext>","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.categories","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/categories.html","searchKeys":["categories","open fun categories(categories: Array<Biome.Category>): Predicate<BiomeSelectionContext>"]},{"name":"open fun foundInOverworld(): Predicate<BiomeSelectionContext>","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.foundInOverworld","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/found-in-overworld.html","searchKeys":["foundInOverworld","open fun foundInOverworld(): Predicate<BiomeSelectionContext>"]},{"name":"open fun foundInTheEnd(): Predicate<BiomeSelectionContext>","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.foundInTheEnd","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/found-in-the-end.html","searchKeys":["foundInTheEnd","open fun foundInTheEnd(): Predicate<BiomeSelectionContext>"]},{"name":"open fun foundInTheNether(): Predicate<BiomeSelectionContext>","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.foundInTheNether","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/found-in-the-nether.html","searchKeys":["foundInTheNether","open fun foundInTheNether(): Predicate<BiomeSelectionContext>"]},{"name":"open fun vanilla(): Predicate<BiomeSelectionContext>","description":"net.fabricmc.fabric.api.biome.v1.BiomeSelectors.vanilla","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-biome-selectors/vanilla.html","searchKeys":["vanilla","open fun vanilla(): Predicate<BiomeSelectionContext>"]},{"name":"enum ModificationPhase","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/index.html","searchKeys":["ModificationPhase","enum ModificationPhase"]},{"name":"ADDITIONS","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase.ADDITIONS","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/-a-d-d-i-t-i-o-n-s/index.html","searchKeys":["ADDITIONS","ADDITIONS"]},{"name":"POST_PROCESSING","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase.POST_PROCESSING","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/-p-o-s-t_-p-r-o-c-e-s-s-i-n-g/index.html","searchKeys":["POST_PROCESSING","POST_PROCESSING"]},{"name":"REMOVALS","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase.REMOVALS","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/-r-e-m-o-v-a-l-s/index.html","searchKeys":["REMOVALS","REMOVALS"]},{"name":"REPLACEMENTS","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase.REPLACEMENTS","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/-r-e-p-l-a-c-e-m-e-n-t-s/index.html","searchKeys":["REPLACEMENTS","REPLACEMENTS"]},{"name":"open fun valueOf(name: String): ModificationPhase","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase.valueOf","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): ModificationPhase"]},{"name":"open fun valueOf(name: String): OverworldClimate","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate.valueOf","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): OverworldClimate"]},{"name":"open fun values(): Array<ModificationPhase>","description":"net.fabricmc.fabric.api.biome.v1.ModificationPhase.values","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-modification-phase/values.html","searchKeys":["values","open fun values(): Array<ModificationPhase>"]},{"name":"open fun values(): Array<OverworldClimate>","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate.values","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/values.html","searchKeys":["values","open fun values(): Array<OverworldClimate>"]},{"name":"class NetherBiomes","description":"net.fabricmc.fabric.api.biome.v1.NetherBiomes","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-nether-biomes/index.html","searchKeys":["NetherBiomes","class NetherBiomes"]},{"name":"open fun addNetherBiome(biome: RegistryKey<Biome>, mixedNoisePoint: Biome.MixedNoisePoint)","description":"net.fabricmc.fabric.api.biome.v1.NetherBiomes.addNetherBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-nether-biomes/add-nether-biome.html","searchKeys":["addNetherBiome","open fun addNetherBiome(biome: RegistryKey<Biome>, mixedNoisePoint: Biome.MixedNoisePoint)"]},{"name":"open fun addNetherBiome(biome: RegistryKey<Biome>, spawnNoisePoint: Biome.MixedNoisePoint)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addNetherBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-nether-biome.html","searchKeys":["addNetherBiome","open fun addNetherBiome(biome: RegistryKey<Biome>, spawnNoisePoint: Biome.MixedNoisePoint)"]},{"name":"open fun canGenerateInNether(biome: RegistryKey<Biome>): Boolean","description":"net.fabricmc.fabric.api.biome.v1.NetherBiomes.canGenerateInNether","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-nether-biomes/can-generate-in-nether.html","searchKeys":["canGenerateInNether","open fun canGenerateInNether(biome: RegistryKey<Biome>): Boolean"]},{"name":"open fun canGenerateInNether(biome: RegistryKey<Biome>): Boolean","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.canGenerateInNether","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/can-generate-in-nether.html","searchKeys":["canGenerateInNether","open fun canGenerateInNether(biome: RegistryKey<Biome>): Boolean"]},{"name":"class OverworldBiomes","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/index.html","searchKeys":["OverworldBiomes","class OverworldBiomes"]},{"name":"open fun addBiomeVariant(replaced: RegistryKey<Biome>, variant: RegistryKey<Biome>, chance: Double, climates: Array<OverworldClimate>)","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes.addBiomeVariant","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/add-biome-variant.html","searchKeys":["addBiomeVariant","open fun addBiomeVariant(replaced: RegistryKey<Biome>, variant: RegistryKey<Biome>, chance: Double, climates: Array<OverworldClimate>)"]},{"name":"open fun addContinentalBiome(biome: RegistryKey<Biome>, climate: OverworldClimate, weight: Double)","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes.addContinentalBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/add-continental-biome.html","searchKeys":["addContinentalBiome","open fun addContinentalBiome(biome: RegistryKey<Biome>, climate: OverworldClimate, weight: Double)"]},{"name":"open fun addEdgeBiome(parent: RegistryKey<Biome>, edge: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes.addEdgeBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/add-edge-biome.html","searchKeys":["addEdgeBiome","open fun addEdgeBiome(parent: RegistryKey<Biome>, edge: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun addHillsBiome(parent: RegistryKey<Biome>, hills: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes.addHillsBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/add-hills-biome.html","searchKeys":["addHillsBiome","open fun addHillsBiome(parent: RegistryKey<Biome>, hills: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun addShoreBiome(parent: RegistryKey<Biome>, shore: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes.addShoreBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/add-shore-biome.html","searchKeys":["addShoreBiome","open fun addShoreBiome(parent: RegistryKey<Biome>, shore: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun setRiverBiome(parent: RegistryKey<Biome>, river: RegistryKey<Biome>)","description":"net.fabricmc.fabric.api.biome.v1.OverworldBiomes.setRiverBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-biomes/set-river-biome.html","searchKeys":["setRiverBiome","open fun setRiverBiome(parent: RegistryKey<Biome>, river: RegistryKey<Biome>)"]},{"name":"enum OverworldClimate","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/index.html","searchKeys":["OverworldClimate","enum OverworldClimate"]},{"name":"COOL","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate.COOL","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/-c-o-o-l/index.html","searchKeys":["COOL","COOL"]},{"name":"DRY","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate.DRY","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/-d-r-y/index.html","searchKeys":["DRY","DRY"]},{"name":"SNOWY","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate.SNOWY","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/-s-n-o-w-y/index.html","searchKeys":["SNOWY","SNOWY"]},{"name":"TEMPERATE","description":"net.fabricmc.fabric.api.biome.v1.OverworldClimate.TEMPERATE","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-overworld-climate/-t-e-m-p-e-r-a-t-e/index.html","searchKeys":["TEMPERATE","TEMPERATE"]},{"name":"class TheEndBiomes","description":"net.fabricmc.fabric.api.biome.v1.TheEndBiomes","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-the-end-biomes/index.html","searchKeys":["TheEndBiomes","class TheEndBiomes"]},{"name":"open fun addBarrensBiome(highlands: RegistryKey<Biome>, barrens: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.api.biome.v1.TheEndBiomes.addBarrensBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-the-end-biomes/add-barrens-biome.html","searchKeys":["addBarrensBiome","open fun addBarrensBiome(highlands: RegistryKey<Biome>, barrens: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun addHighlandsBiome(biome: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.api.biome.v1.TheEndBiomes.addHighlandsBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-the-end-biomes/add-highlands-biome.html","searchKeys":["addHighlandsBiome","open fun addHighlandsBiome(biome: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun addMainIslandBiome(biome: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.api.biome.v1.TheEndBiomes.addMainIslandBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-the-end-biomes/add-main-island-biome.html","searchKeys":["addMainIslandBiome","open fun addMainIslandBiome(biome: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun addMidlandsBiome(highlands: RegistryKey<Biome>, midlands: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.api.biome.v1.TheEndBiomes.addMidlandsBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-the-end-biomes/add-midlands-biome.html","searchKeys":["addMidlandsBiome","open fun addMidlandsBiome(highlands: RegistryKey<Biome>, midlands: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun addSmallIslandsBiome(biome: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.api.biome.v1.TheEndBiomes.addSmallIslandsBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.api.biome.v1/-the-end-biomes/add-small-islands-biome.html","searchKeys":["addSmallIslandsBiome","open fun addSmallIslandsBiome(biome: RegistryKey<Biome>, weight: Double)"]},{"name":" class BiomeVariant","description":"net.fabricmc.fabric.impl.biome.BiomeVariant","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-biome-variant/index.html","searchKeys":["BiomeVariant"," class BiomeVariant"]},{"name":" open fun BiomeVariant(variant: RegistryKey<Biome>, chance: Double)","description":"net.fabricmc.fabric.impl.biome.BiomeVariant.BiomeVariant","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-biome-variant/-biome-variant.html","searchKeys":["BiomeVariant"," open fun BiomeVariant(variant: RegistryKey<Biome>, chance: Double)"]},{"name":"private val chance: Double","description":"net.fabricmc.fabric.impl.biome.BiomeVariant.chance","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-biome-variant/chance.html","searchKeys":["chance","private val chance: Double"]},{"name":"private val variant: RegistryKey<Biome>","description":"net.fabricmc.fabric.impl.biome.BiomeVariant.variant","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-biome-variant/variant.html","searchKeys":["variant","private val variant: RegistryKey<Biome>"]},{"name":"class InternalBiomeData","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/index.html","searchKeys":["InternalBiomeData","class InternalBiomeData"]},{"name":"open fun addEndBarrensReplacement(highlands: RegistryKey<Biome>, barrens: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addEndBarrensReplacement","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-end-barrens-replacement.html","searchKeys":["addEndBarrensReplacement","open fun addEndBarrensReplacement(highlands: RegistryKey<Biome>, barrens: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun addEndBiomeReplacement(replaced: RegistryKey<Biome>, variant: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addEndBiomeReplacement","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-end-biome-replacement.html","searchKeys":["addEndBiomeReplacement","open fun addEndBiomeReplacement(replaced: RegistryKey<Biome>, variant: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun addEndMidlandsReplacement(highlands: RegistryKey<Biome>, midlands: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addEndMidlandsReplacement","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-end-midlands-replacement.html","searchKeys":["addEndMidlandsReplacement","open fun addEndMidlandsReplacement(highlands: RegistryKey<Biome>, midlands: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun addOverworldBiomeReplacement(replaced: RegistryKey<Biome>, variant: RegistryKey<Biome>, chance: Double, climates: Array<OverworldClimate>)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addOverworldBiomeReplacement","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-overworld-biome-replacement.html","searchKeys":["addOverworldBiomeReplacement","open fun addOverworldBiomeReplacement(replaced: RegistryKey<Biome>, variant: RegistryKey<Biome>, chance: Double, climates: Array<OverworldClimate>)"]},{"name":"open fun addOverworldContinentalBiome(climate: OverworldClimate, biome: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addOverworldContinentalBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-overworld-continental-biome.html","searchKeys":["addOverworldContinentalBiome","open fun addOverworldContinentalBiome(climate: OverworldClimate, biome: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun addOverworldEdgeBiome(primary: RegistryKey<Biome>, edge: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addOverworldEdgeBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-overworld-edge-biome.html","searchKeys":["addOverworldEdgeBiome","open fun addOverworldEdgeBiome(primary: RegistryKey<Biome>, edge: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun addOverworldHillsBiome(primary: RegistryKey<Biome>, hills: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addOverworldHillsBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-overworld-hills-biome.html","searchKeys":["addOverworldHillsBiome","open fun addOverworldHillsBiome(primary: RegistryKey<Biome>, hills: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun addOverworldShoreBiome(primary: RegistryKey<Biome>, shore: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.addOverworldShoreBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/add-overworld-shore-biome.html","searchKeys":["addOverworldShoreBiome","open fun addOverworldShoreBiome(primary: RegistryKey<Biome>, shore: RegistryKey<Biome>, weight: Double)"]},{"name":"open fun getEndBarrensMap(): Map<RegistryKey<Biome>, WeightedBiomePicker>","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getEndBarrensMap","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-end-barrens-map.html","searchKeys":["getEndBarrensMap","open fun getEndBarrensMap(): Map<RegistryKey<Biome>, WeightedBiomePicker>"]},{"name":"open fun getEndBiomesMap(): Map<RegistryKey<Biome>, WeightedBiomePicker>","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getEndBiomesMap","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-end-biomes-map.html","searchKeys":["getEndBiomesMap","open fun getEndBiomesMap(): Map<RegistryKey<Biome>, WeightedBiomePicker>"]},{"name":"open fun getEndMidlandsMap(): Map<RegistryKey<Biome>, WeightedBiomePicker>","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getEndMidlandsMap","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-end-midlands-map.html","searchKeys":["getEndMidlandsMap","open fun getEndMidlandsMap(): Map<RegistryKey<Biome>, WeightedBiomePicker>"]},{"name":"open fun getNetherBiomeNoisePoints(): Map<RegistryKey<Biome>, Biome.MixedNoisePoint>","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getNetherBiomeNoisePoints","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-nether-biome-noise-points.html","searchKeys":["getNetherBiomeNoisePoints","open fun getNetherBiomeNoisePoints(): Map<RegistryKey<Biome>, Biome.MixedNoisePoint>"]},{"name":"open fun getOverworldEdges(): Map<RegistryKey<Biome>, WeightedBiomePicker>","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getOverworldEdges","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-overworld-edges.html","searchKeys":["getOverworldEdges","open fun getOverworldEdges(): Map<RegistryKey<Biome>, WeightedBiomePicker>"]},{"name":"open fun getOverworldHills(): Map<RegistryKey<Biome>, WeightedBiomePicker>","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getOverworldHills","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-overworld-hills.html","searchKeys":["getOverworldHills","open fun getOverworldHills(): Map<RegistryKey<Biome>, WeightedBiomePicker>"]},{"name":"open fun getOverworldModdedContinentalBiomePickers(): EnumMap<OverworldClimate, WeightedBiomePicker>","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getOverworldModdedContinentalBiomePickers","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-overworld-modded-continental-biome-pickers.html","searchKeys":["getOverworldModdedContinentalBiomePickers","open fun getOverworldModdedContinentalBiomePickers(): EnumMap<OverworldClimate, WeightedBiomePicker>"]},{"name":"open fun getOverworldRivers(): Map<RegistryKey<Biome>, RegistryKey<Biome>>","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getOverworldRivers","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-overworld-rivers.html","searchKeys":["getOverworldRivers","open fun getOverworldRivers(): Map<RegistryKey<Biome>, RegistryKey<Biome>>"]},{"name":"open fun getOverworldShores(): Map<RegistryKey<Biome>, WeightedBiomePicker>","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getOverworldShores","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-overworld-shores.html","searchKeys":["getOverworldShores","open fun getOverworldShores(): Map<RegistryKey<Biome>, WeightedBiomePicker>"]},{"name":"open fun getOverworldVariantTransformers(): Map<RegistryKey<Biome>, VariantTransformer>","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.getOverworldVariantTransformers","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/get-overworld-variant-transformers.html","searchKeys":["getOverworldVariantTransformers","open fun getOverworldVariantTransformers(): Map<RegistryKey<Biome>, VariantTransformer>"]},{"name":"open fun setOverworldRiverBiome(primary: RegistryKey<Biome>, river: RegistryKey<Biome>)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeData.setOverworldRiverBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-data/set-overworld-river-biome.html","searchKeys":["setOverworldRiverBiome","open fun setOverworldRiverBiome(primary: RegistryKey<Biome>, river: RegistryKey<Biome>)"]},{"name":"class InternalBiomeUtils","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/index.html","searchKeys":["InternalBiomeUtils","class InternalBiomeUtils"]},{"name":"open fun ensureIdMapping(biomeKey: RegistryKey<Biome>)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.ensureIdMapping","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/ensure-id-mapping.html","searchKeys":["ensureIdMapping","open fun ensureIdMapping(biomeKey: RegistryKey<Biome>)"]},{"name":"open fun getRawId(key: RegistryKey<Biome>): Int","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.getRawId","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/get-raw-id.html","searchKeys":["getRawId","open fun getRawId(key: RegistryKey<Biome>): Int"]},{"name":"open fun injectBiomesIntoClimate(random: LayerRandomnessSource, vanillaArray: Array<Int>, climate: OverworldClimate, result: IntConsumer)","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.injectBiomesIntoClimate","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/inject-biomes-into-climate.html","searchKeys":["injectBiomesIntoClimate","open fun injectBiomesIntoClimate(random: LayerRandomnessSource, vanillaArray: Array<Int>, climate: OverworldClimate, result: IntConsumer)"]},{"name":"open fun isEdge(north: Int, east: Int, south: Int, west: Int, center: Int): Boolean","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.isEdge","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/is-edge.html","searchKeys":["isEdge","open fun isEdge(north: Int, east: Int, south: Int, west: Int, center: Int): Boolean"]},{"name":"open fun neighborsOcean(north: Int, east: Int, south: Int, west: Int): Boolean","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.neighborsOcean","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/neighbors-ocean.html","searchKeys":["neighborsOcean","open fun neighborsOcean(north: Int, east: Int, south: Int, west: Int): Boolean"]},{"name":"open fun searchForBiome(reqWeightSum: Double, vanillaArrayWeight: Int, moddedBiomes: List<WeightedBiomeEntry>): Int","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.searchForBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/search-for-biome.html","searchKeys":["searchForBiome","open fun searchForBiome(reqWeightSum: Double, vanillaArrayWeight: Int, moddedBiomes: List<WeightedBiomeEntry>): Int"]},{"name":"open fun transformBiome(random: LayerRandomnessSource, existing: RegistryKey<Biome>, climate: OverworldClimate): Int","description":"net.fabricmc.fabric.impl.biome.InternalBiomeUtils.transformBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-internal-biome-utils/transform-biome.html","searchKeys":["transformBiome","open fun transformBiome(random: LayerRandomnessSource, existing: RegistryKey<Biome>, climate: OverworldClimate): Int"]},{"name":" open fun transformBiome(replaced: RegistryKey<Biome>, random: LayerRandomnessSource, climate: OverworldClimate): RegistryKey<Biome>","description":"net.fabricmc.fabric.impl.biome.VariantTransformer.transformBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-variant-transformer/transform-biome.html","searchKeys":["transformBiome"," open fun transformBiome(replaced: RegistryKey<Biome>, random: LayerRandomnessSource, climate: OverworldClimate): RegistryKey<Biome>"]},{"name":"open class SimpleLayerRandomnessSource : LayerRandomnessSource","description":"net.fabricmc.fabric.impl.biome.SimpleLayerRandomnessSource","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-simple-layer-randomness-source/index.html","searchKeys":["SimpleLayerRandomnessSource","open class SimpleLayerRandomnessSource : LayerRandomnessSource"]},{"name":"open fun SimpleLayerRandomnessSource(seed: Long)","description":"net.fabricmc.fabric.impl.biome.SimpleLayerRandomnessSource.SimpleLayerRandomnessSource","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-simple-layer-randomness-source/-simple-layer-randomness-source.html","searchKeys":["SimpleLayerRandomnessSource","open fun SimpleLayerRandomnessSource(seed: Long)"]},{"name":"open fun getNoiseSampler(): PerlinNoiseSampler","description":"net.fabricmc.fabric.impl.biome.SimpleLayerRandomnessSource.getNoiseSampler","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-simple-layer-randomness-source/get-noise-sampler.html","searchKeys":["getNoiseSampler","open fun getNoiseSampler(): PerlinNoiseSampler"]},{"name":"open fun nextInt(bound: Int): Int","description":"net.fabricmc.fabric.impl.biome.SimpleLayerRandomnessSource.nextInt","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-simple-layer-randomness-source/next-int.html","searchKeys":["nextInt","open fun nextInt(bound: Int): Int"]},{"name":" class VariantTransformer","description":"net.fabricmc.fabric.impl.biome.VariantTransformer","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-variant-transformer/index.html","searchKeys":["VariantTransformer"," class VariantTransformer"]},{"name":" class SubTransformer","description":"net.fabricmc.fabric.impl.biome.VariantTransformer.SubTransformer","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-variant-transformer/-sub-transformer/index.html","searchKeys":["SubTransformer"," class SubTransformer"]},{"name":" open fun addBiome(variant: RegistryKey<Biome>, chance: Double, climates: Array<OverworldClimate>)","description":"net.fabricmc.fabric.impl.biome.VariantTransformer.addBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-variant-transformer/add-biome.html","searchKeys":["addBiome"," open fun addBiome(variant: RegistryKey<Biome>, chance: Double, climates: Array<OverworldClimate>)"]},{"name":" open fun addBiome(biome: RegistryKey<Biome>, weight: Double)","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker.addBiome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/add-biome.html","searchKeys":["addBiome"," open fun addBiome(biome: RegistryKey<Biome>, weight: Double)"]},{"name":" class WeightedBiomeEntry","description":"net.fabricmc.fabric.impl.biome.WeightedBiomeEntry","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-entry/index.html","searchKeys":["WeightedBiomeEntry"," class WeightedBiomeEntry"]},{"name":" open fun WeightedBiomeEntry(biome: RegistryKey<Biome>, weight: Double, upperWeightBound: Double)","description":"net.fabricmc.fabric.impl.biome.WeightedBiomeEntry.WeightedBiomeEntry","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-entry/-weighted-biome-entry.html","searchKeys":["WeightedBiomeEntry"," open fun WeightedBiomeEntry(biome: RegistryKey<Biome>, weight: Double, upperWeightBound: Double)"]},{"name":"private val biome: RegistryKey<Biome>","description":"net.fabricmc.fabric.impl.biome.WeightedBiomeEntry.biome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-entry/biome.html","searchKeys":["biome","private val biome: RegistryKey<Biome>"]},{"name":"private val biome: Biome","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl.biome","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/biome.html","searchKeys":["biome","private val biome: Biome"]},{"name":"private val upperWeightBound: Double","description":"net.fabricmc.fabric.impl.biome.WeightedBiomeEntry.upperWeightBound","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-entry/upper-weight-bound.html","searchKeys":["upperWeightBound","private val upperWeightBound: Double"]},{"name":"private val weight: Double","description":"net.fabricmc.fabric.impl.biome.WeightedBiomeEntry.weight","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-entry/weight.html","searchKeys":["weight","private val weight: Double"]},{"name":"class WeightedBiomePicker","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/index.html","searchKeys":["WeightedBiomePicker","class WeightedBiomePicker"]},{"name":" open fun WeightedBiomePicker()","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker.WeightedBiomePicker","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/-weighted-biome-picker.html","searchKeys":["WeightedBiomePicker"," open fun WeightedBiomePicker()"]},{"name":" open fun getCurrentWeightTotal(): Double","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker.getCurrentWeightTotal","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/get-current-weight-total.html","searchKeys":["getCurrentWeightTotal"," open fun getCurrentWeightTotal(): Double"]},{"name":"open fun pickFromNoise(source: LayerRandomnessSource, x: Double, y: Double, z: Double): RegistryKey<Biome>","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker.pickFromNoise","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/pick-from-noise.html","searchKeys":["pickFromNoise","open fun pickFromNoise(source: LayerRandomnessSource, x: Double, y: Double, z: Double): RegistryKey<Biome>"]},{"name":"open fun pickRandom(random: LayerRandomnessSource): RegistryKey<Biome>","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker.pickRandom","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/pick-random.html","searchKeys":["pickRandom","open fun pickRandom(random: LayerRandomnessSource): RegistryKey<Biome>"]},{"name":" open fun search(target: Double): WeightedBiomeEntry","description":"net.fabricmc.fabric.impl.biome.WeightedBiomePicker.search","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome/-weighted-biome-picker/search.html","searchKeys":["search"," open fun search(target: Double): WeightedBiomeEntry"]},{"name":"open class BiomeModificationContextImpl : BiomeModificationContext","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/index.html","searchKeys":["BiomeModificationContextImpl","open class BiomeModificationContextImpl : BiomeModificationContext"]},{"name":"open fun BiomeModificationContextImpl(registries: DynamicRegistryManager, biome: Biome)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.BiomeModificationContextImpl","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/-biome-modification-context-impl.html","searchKeys":["BiomeModificationContextImpl","open fun BiomeModificationContextImpl(registries: DynamicRegistryManager, biome: Biome)"]},{"name":"private val effects: BiomeModificationContext.EffectsContext","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.effects","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/effects.html","searchKeys":["effects","private val effects: BiomeModificationContext.EffectsContext"]},{"name":" open fun freeze()","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.freeze","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/freeze.html","searchKeys":["freeze"," open fun freeze()"]},{"name":"private val weather: BiomeModificationContext.WeatherContext","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationContextImpl.weather","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-context-impl/weather.html","searchKeys":["weather","private val weather: BiomeModificationContext.WeatherContext"]},{"name":"open class BiomeModificationImpl","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationImpl","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-impl/index.html","searchKeys":["BiomeModificationImpl","open class BiomeModificationImpl"]},{"name":"val INSTANCE: BiomeModificationImpl","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationImpl.INSTANCE","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-impl/-i-n-s-t-a-n-c-e.html","searchKeys":["INSTANCE","val INSTANCE: BiomeModificationImpl"]},{"name":" open fun changeOrder(id: Identifier, order: Int)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationImpl.changeOrder","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-impl/change-order.html","searchKeys":["changeOrder"," open fun changeOrder(id: Identifier, order: Int)"]},{"name":" open fun clearModifiers()","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationImpl.clearModifiers","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-impl/clear-modifiers.html","searchKeys":["clearModifiers"," open fun clearModifiers()"]},{"name":"open fun modifyBiomes(impl: DynamicRegistryManager.Impl)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationImpl.modifyBiomes","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-impl/modify-biomes.html","searchKeys":["modifyBiomes","open fun modifyBiomes(impl: DynamicRegistryManager.Impl)"]},{"name":"interface BiomeModificationTracker","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationTracker","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-tracker/index.html","searchKeys":["BiomeModificationTracker","interface BiomeModificationTracker"]},{"name":" abstract fun fabric_getModifiedBiomes(): Set<RegistryKey<Biome>>","description":"net.fabricmc.fabric.impl.biome.modification.BiomeModificationTracker.fabric_getModifiedBiomes","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-modification-tracker/fabric_get-modified-biomes.html","searchKeys":["fabric_getModifiedBiomes"," abstract fun fabric_getModifiedBiomes(): Set<RegistryKey<Biome>>"]},{"name":"open fun fabric_getModifiedBiomes(): Set<RegistryKey<Biome>>","description":"net.fabricmc.fabric.mixin.biome.modification.DynamicRegistryManagerImplMixin.fabric_getModifiedBiomes","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-dynamic-registry-manager-impl-mixin/fabric_get-modified-biomes.html","searchKeys":["fabric_getModifiedBiomes","open fun fabric_getModifiedBiomes(): Set<RegistryKey<Biome>>"]},{"name":"open class BiomeSelectionContextImpl : BiomeSelectionContext","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/index.html","searchKeys":["BiomeSelectionContextImpl","open class BiomeSelectionContextImpl : BiomeSelectionContext"]},{"name":"open fun BiomeSelectionContextImpl(dynamicRegistries: DynamicRegistryManager, key: RegistryKey<Biome>, biome: Biome)","description":"net.fabricmc.fabric.impl.biome.modification.BiomeSelectionContextImpl.BiomeSelectionContextImpl","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-biome-selection-context-impl/-biome-selection-context-impl.html","searchKeys":["BiomeSelectionContextImpl","open fun BiomeSelectionContextImpl(dynamicRegistries: DynamicRegistryManager, key: RegistryKey<Biome>, biome: Biome)"]},{"name":"class BuiltInRegistryKeys","description":"net.fabricmc.fabric.impl.biome.modification.BuiltInRegistryKeys","location":"fabric-biome-api-v1/net.fabricmc.fabric.impl.biome.modification/-built-in-registry-keys/index.html","searchKeys":["BuiltInRegistryKeys","class BuiltInRegistryKeys"]},{"name":"interface AddHillsLayerAccessor","description":"net.fabricmc.fabric.mixin.biome.AddHillsLayerAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-add-hills-layer-accessor/index.html","searchKeys":["AddHillsLayerAccessor","interface AddHillsLayerAccessor"]},{"name":" open fun getBaseToVariantMap(): Int2IntMap","description":"net.fabricmc.fabric.mixin.biome.AddHillsLayerAccessor.getBaseToVariantMap","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-add-hills-layer-accessor/get-base-to-variant-map.html","searchKeys":["getBaseToVariantMap"," open fun getBaseToVariantMap(): Int2IntMap"]},{"name":"interface BuiltinBiomesAccessor","description":"net.fabricmc.fabric.mixin.biome.BuiltinBiomesAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-builtin-biomes-accessor/index.html","searchKeys":["BuiltinBiomesAccessor","interface BuiltinBiomesAccessor"]},{"name":" open fun getBY_RAW_ID(): Int2ObjectMap<RegistryKey<Biome>>","description":"net.fabricmc.fabric.mixin.biome.BuiltinBiomesAccessor.getBY_RAW_ID","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-builtin-biomes-accessor/get-b-y_-r-a-w_-i-d.html","searchKeys":["getBY_RAW_ID"," open fun getBY_RAW_ID(): Int2ObjectMap<RegistryKey<Biome>>"]},{"name":"open class MixinAddEdgeBiomesLayer","description":"net.fabricmc.fabric.mixin.biome.MixinAddEdgeBiomesLayer","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-mixin-add-edge-biomes-layer/index.html","searchKeys":["MixinAddEdgeBiomesLayer","open class MixinAddEdgeBiomesLayer"]},{"name":"open class MixinAddHillsLayer","description":"net.fabricmc.fabric.mixin.biome.MixinAddHillsLayer","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-mixin-add-hills-layer/index.html","searchKeys":["MixinAddHillsLayer","open class MixinAddHillsLayer"]},{"name":"open class MixinAddRiversLayer","description":"net.fabricmc.fabric.mixin.biome.MixinAddRiversLayer","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-mixin-add-rivers-layer/index.html","searchKeys":["MixinAddRiversLayer","open class MixinAddRiversLayer"]},{"name":"open class MixinMultiNoiseBiomeSource","description":"net.fabricmc.fabric.mixin.biome.MixinMultiNoiseBiomeSource","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-mixin-multi-noise-biome-source/index.html","searchKeys":["MixinMultiNoiseBiomeSource","open class MixinMultiNoiseBiomeSource"]},{"name":"open class MixinSetBaseBiomesLayer","description":"net.fabricmc.fabric.mixin.biome.MixinSetBaseBiomesLayer","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-mixin-set-base-biomes-layer/index.html","searchKeys":["MixinSetBaseBiomesLayer","open class MixinSetBaseBiomesLayer"]},{"name":"open class MixinTheEndBiomeSource","description":"net.fabricmc.fabric.mixin.biome.MixinTheEndBiomeSource","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-mixin-the-end-biome-source/index.html","searchKeys":["MixinTheEndBiomeSource","open class MixinTheEndBiomeSource"]},{"name":"interface MultiNoiseBiomeSourceAccessor","description":"net.fabricmc.fabric.mixin.biome.MultiNoiseBiomeSourceAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-multi-noise-biome-source-accessor/index.html","searchKeys":["MultiNoiseBiomeSourceAccessor","interface MultiNoiseBiomeSourceAccessor"]},{"name":" abstract fun getBiomePoints(): List<Pair<Biome.MixedNoisePoint, Supplier<Biome>>>","description":"net.fabricmc.fabric.mixin.biome.MultiNoiseBiomeSourceAccessor.getBiomePoints","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-multi-noise-biome-source-accessor/get-biome-points.html","searchKeys":["getBiomePoints"," abstract fun getBiomePoints(): List<Pair<Biome.MixedNoisePoint, Supplier<Biome>>>"]},{"name":" abstract fun setBiomePoints(list: List<Pair<Biome.MixedNoisePoint, Supplier<Biome>>>)","description":"net.fabricmc.fabric.mixin.biome.MultiNoiseBiomeSourceAccessor.setBiomePoints","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-multi-noise-biome-source-accessor/set-biome-points.html","searchKeys":["setBiomePoints"," abstract fun setBiomePoints(list: List<Pair<Biome.MixedNoisePoint, Supplier<Biome>>>)"]},{"name":"interface VanillaLayeredBiomeSourceAccessor","description":"net.fabricmc.fabric.mixin.biome.VanillaLayeredBiomeSourceAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-vanilla-layered-biome-source-accessor/index.html","searchKeys":["VanillaLayeredBiomeSourceAccessor","interface VanillaLayeredBiomeSourceAccessor"]},{"name":" open fun getBIOMES(): List<RegistryKey<Biome>>","description":"net.fabricmc.fabric.mixin.biome.VanillaLayeredBiomeSourceAccessor.getBIOMES","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-vanilla-layered-biome-source-accessor/get-b-i-o-m-e-s.html","searchKeys":["getBIOMES"," open fun getBIOMES(): List<RegistryKey<Biome>>"]},{"name":" open fun setBIOMES(biomes: List<RegistryKey<Biome>>)","description":"net.fabricmc.fabric.mixin.biome.VanillaLayeredBiomeSourceAccessor.setBIOMES","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome/-vanilla-layered-biome-source-accessor/set-b-i-o-m-e-s.html","searchKeys":["setBIOMES"," open fun setBIOMES(biomes: List<RegistryKey<Biome>>)"]},{"name":"interface BiomeAccessor","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/index.html","searchKeys":["BiomeAccessor","interface BiomeAccessor"]},{"name":" abstract fun fabric_getGenerationSettings(): GenerationSettings","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor.fabric_getGenerationSettings","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/fabric_get-generation-settings.html","searchKeys":["fabric_getGenerationSettings"," abstract fun fabric_getGenerationSettings(): GenerationSettings"]},{"name":" abstract fun fabric_getSpawnSettings(): SpawnSettings","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor.fabric_getSpawnSettings","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/fabric_get-spawn-settings.html","searchKeys":["fabric_getSpawnSettings"," abstract fun fabric_getSpawnSettings(): SpawnSettings"]},{"name":" abstract fun fabric_getWeather(): Biome.Weather","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor.fabric_getWeather","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/fabric_get-weather.html","searchKeys":["fabric_getWeather"," abstract fun fabric_getWeather(): Biome.Weather"]},{"name":" abstract fun fabric_setCategory(category: Biome.Category)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor.fabric_setCategory","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/fabric_set-category.html","searchKeys":["fabric_setCategory"," abstract fun fabric_setCategory(category: Biome.Category)"]},{"name":" abstract fun fabric_setDepth(depth: Float)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor.fabric_setDepth","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/fabric_set-depth.html","searchKeys":["fabric_setDepth"," abstract fun fabric_setDepth(depth: Float)"]},{"name":" abstract fun fabric_setScale(scale: Float)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeAccessor.fabric_setScale","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-accessor/fabric_set-scale.html","searchKeys":["fabric_setScale"," abstract fun fabric_setScale(scale: Float)"]},{"name":"interface BiomeEffectsAccessor","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/index.html","searchKeys":["BiomeEffectsAccessor","interface BiomeEffectsAccessor"]},{"name":" abstract fun fabric_setAdditionsSound(value: Optional<BiomeAdditionsSound>)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setAdditionsSound","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-additions-sound.html","searchKeys":["fabric_setAdditionsSound"," abstract fun fabric_setAdditionsSound(value: Optional<BiomeAdditionsSound>)"]},{"name":" abstract fun fabric_setFogColor(value: Int)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setFogColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-fog-color.html","searchKeys":["fabric_setFogColor"," abstract fun fabric_setFogColor(value: Int)"]},{"name":" abstract fun fabric_setFoliageColor(value: Optional<Integer>)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setFoliageColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-foliage-color.html","searchKeys":["fabric_setFoliageColor"," abstract fun fabric_setFoliageColor(value: Optional<Integer>)"]},{"name":" abstract fun fabric_setGrassColor(value: Optional<Integer>)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setGrassColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-grass-color.html","searchKeys":["fabric_setGrassColor"," abstract fun fabric_setGrassColor(value: Optional<Integer>)"]},{"name":" abstract fun fabric_setGrassColorModifier(value: BiomeEffects.GrassColorModifier)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setGrassColorModifier","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-grass-color-modifier.html","searchKeys":["fabric_setGrassColorModifier"," abstract fun fabric_setGrassColorModifier(value: BiomeEffects.GrassColorModifier)"]},{"name":" abstract fun fabric_setLoopSound(value: Optional<SoundEvent>)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setLoopSound","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-loop-sound.html","searchKeys":["fabric_setLoopSound"," abstract fun fabric_setLoopSound(value: Optional<SoundEvent>)"]},{"name":" abstract fun fabric_setMoodSound(value: Optional<BiomeMoodSound>)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setMoodSound","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-mood-sound.html","searchKeys":["fabric_setMoodSound"," abstract fun fabric_setMoodSound(value: Optional<BiomeMoodSound>)"]},{"name":" abstract fun fabric_setMusic(value: Optional<MusicSound>)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setMusic","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-music.html","searchKeys":["fabric_setMusic"," abstract fun fabric_setMusic(value: Optional<MusicSound>)"]},{"name":" abstract fun fabric_setParticleConfig(value: Optional<BiomeParticleConfig>)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setParticleConfig","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-particle-config.html","searchKeys":["fabric_setParticleConfig"," abstract fun fabric_setParticleConfig(value: Optional<BiomeParticleConfig>)"]},{"name":" abstract fun fabric_setSkyColor(value: Int)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setSkyColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-sky-color.html","searchKeys":["fabric_setSkyColor"," abstract fun fabric_setSkyColor(value: Int)"]},{"name":" abstract fun fabric_setWaterColor(value: Int)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setWaterColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-water-color.html","searchKeys":["fabric_setWaterColor"," abstract fun fabric_setWaterColor(value: Int)"]},{"name":" abstract fun fabric_setWaterFogColor(value: Int)","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeEffectsAccessor.fabric_setWaterFogColor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-effects-accessor/fabric_set-water-fog-color.html","searchKeys":["fabric_setWaterFogColor"," abstract fun fabric_setWaterFogColor(value: Int)"]},{"name":"interface BiomeWeatherAccessor","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/index.html","searchKeys":["BiomeWeatherAccessor","interface BiomeWeatherAccessor"]},{"name":" abstract fun getDownfall(): Float","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.getDownfall","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/get-downfall.html","searchKeys":["getDownfall"," abstract fun getDownfall(): Float"]},{"name":" abstract fun getPrecipitation(): Biome.Precipitation","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.getPrecipitation","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/get-precipitation.html","searchKeys":["getPrecipitation"," abstract fun getPrecipitation(): Biome.Precipitation"]},{"name":" abstract fun getTemperature(): Float","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.getTemperature","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/get-temperature.html","searchKeys":["getTemperature"," abstract fun getTemperature(): Float"]},{"name":" abstract fun getTemperatureModifier(): Biome.TemperatureModifier","description":"net.fabricmc.fabric.mixin.biome.modification.BiomeWeatherAccessor.getTemperatureModifier","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-biome-weather-accessor/get-temperature-modifier.html","searchKeys":["getTemperatureModifier"," abstract fun getTemperatureModifier(): Biome.TemperatureModifier"]},{"name":"open class DynamicRegistryManagerImplMixin : BiomeModificationTracker","description":"net.fabricmc.fabric.mixin.biome.modification.DynamicRegistryManagerImplMixin","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-dynamic-registry-manager-impl-mixin/index.html","searchKeys":["DynamicRegistryManagerImplMixin","open class DynamicRegistryManagerImplMixin : BiomeModificationTracker"]},{"name":"interface GenerationSettingsAccessor","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/index.html","searchKeys":["GenerationSettingsAccessor","interface GenerationSettingsAccessor"]},{"name":" abstract fun fabric_getCarvers(): Map<GenerationStep.Carver, List<Supplier<ConfiguredCarver<out Any>>>>","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_getCarvers","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_get-carvers.html","searchKeys":["fabric_getCarvers"," abstract fun fabric_getCarvers(): Map<GenerationStep.Carver, List<Supplier<ConfiguredCarver<out Any>>>>"]},{"name":" abstract fun fabric_getFeatures(): List<List<Supplier<ConfiguredFeature<out Any, out Any>>>>","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_getFeatures","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_get-features.html","searchKeys":["fabric_getFeatures"," abstract fun fabric_getFeatures(): List<List<Supplier<ConfiguredFeature<out Any, out Any>>>>"]},{"name":" abstract fun fabric_getFlowerFeatures(): List<ConfiguredFeature<out Any, out Any>>","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_getFlowerFeatures","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_get-flower-features.html","searchKeys":["fabric_getFlowerFeatures"," abstract fun fabric_getFlowerFeatures(): List<ConfiguredFeature<out Any, out Any>>"]},{"name":" abstract fun fabric_getStructureFeatures(): List<Supplier<ConfiguredStructureFeature<out Any, out Any>>>","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_getStructureFeatures","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_get-structure-features.html","searchKeys":["fabric_getStructureFeatures"," abstract fun fabric_getStructureFeatures(): List<Supplier<ConfiguredStructureFeature<out Any, out Any>>>"]},{"name":" abstract fun fabric_getSurfaceBuilder(): Supplier<ConfiguredSurfaceBuilder<out Any>>","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_getSurfaceBuilder","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_get-surface-builder.html","searchKeys":["fabric_getSurfaceBuilder"," abstract fun fabric_getSurfaceBuilder(): Supplier<ConfiguredSurfaceBuilder<out Any>>"]},{"name":" abstract fun fabric_setCarvers(value: Map<GenerationStep.Carver, List<Supplier<ConfiguredCarver<out Any>>>>)","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_setCarvers","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_set-carvers.html","searchKeys":["fabric_setCarvers"," abstract fun fabric_setCarvers(value: Map<GenerationStep.Carver, List<Supplier<ConfiguredCarver<out Any>>>>)"]},{"name":" abstract fun fabric_setFeatures(value: List<List<Supplier<ConfiguredFeature<out Any, out Any>>>>)","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_setFeatures","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_set-features.html","searchKeys":["fabric_setFeatures"," abstract fun fabric_setFeatures(value: List<List<Supplier<ConfiguredFeature<out Any, out Any>>>>)"]},{"name":" abstract fun fabric_setFlowerFeatures(value: List<ConfiguredFeature<out Any, out Any>>)","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_setFlowerFeatures","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_set-flower-features.html","searchKeys":["fabric_setFlowerFeatures"," abstract fun fabric_setFlowerFeatures(value: List<ConfiguredFeature<out Any, out Any>>)"]},{"name":" abstract fun fabric_setStructureFeatures(value: List<Supplier<ConfiguredStructureFeature<out Any, out Any>>>)","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_setStructureFeatures","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_set-structure-features.html","searchKeys":["fabric_setStructureFeatures"," abstract fun fabric_setStructureFeatures(value: List<Supplier<ConfiguredStructureFeature<out Any, out Any>>>)"]},{"name":" abstract fun fabric_setSurfaceBuilder(value: Supplier<ConfiguredSurfaceBuilder<out Any>>)","description":"net.fabricmc.fabric.mixin.biome.modification.GenerationSettingsAccessor.fabric_setSurfaceBuilder","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-generation-settings-accessor/fabric_set-surface-builder.html","searchKeys":["fabric_setSurfaceBuilder"," abstract fun fabric_setSurfaceBuilder(value: Supplier<ConfiguredSurfaceBuilder<out Any>>)"]},{"name":"open class RegistryOpsMixin","description":"net.fabricmc.fabric.mixin.biome.modification.RegistryOpsMixin","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-registry-ops-mixin/index.html","searchKeys":["RegistryOpsMixin","open class RegistryOpsMixin"]},{"name":"interface SpawnDensityAccessor","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnDensityAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-density-accessor/index.html","searchKeys":["SpawnDensityAccessor","interface SpawnDensityAccessor"]},{"name":"interface SpawnSettingsAccessor","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/index.html","searchKeys":["SpawnSettingsAccessor","interface SpawnSettingsAccessor"]},{"name":" abstract fun fabric_getSpawnCosts(): Map<EntityType<out Any>, SpawnSettings.SpawnDensity>","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor.fabric_getSpawnCosts","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/fabric_get-spawn-costs.html","searchKeys":["fabric_getSpawnCosts"," abstract fun fabric_getSpawnCosts(): Map<EntityType<out Any>, SpawnSettings.SpawnDensity>"]},{"name":" abstract fun fabric_getSpawners(): Map<SpawnGroup, List<SpawnSettings.SpawnEntry>>","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor.fabric_getSpawners","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/fabric_get-spawners.html","searchKeys":["fabric_getSpawners"," abstract fun fabric_getSpawners(): Map<SpawnGroup, List<SpawnSettings.SpawnEntry>>"]},{"name":" abstract fun fabric_setCreatureSpawnProbability(probability: Float)","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor.fabric_setCreatureSpawnProbability","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/fabric_set-creature-spawn-probability.html","searchKeys":["fabric_setCreatureSpawnProbability"," abstract fun fabric_setCreatureSpawnProbability(probability: Float)"]},{"name":" abstract fun fabric_setPlayerSpawnFriendly(playerSpawnFriendly: Boolean)","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor.fabric_setPlayerSpawnFriendly","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/fabric_set-player-spawn-friendly.html","searchKeys":["fabric_setPlayerSpawnFriendly"," abstract fun fabric_setPlayerSpawnFriendly(playerSpawnFriendly: Boolean)"]},{"name":" abstract fun fabric_setSpawnCosts(spawnCosts: Map<EntityType<out Any>, SpawnSettings.SpawnDensity>)","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor.fabric_setSpawnCosts","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/fabric_set-spawn-costs.html","searchKeys":["fabric_setSpawnCosts"," abstract fun fabric_setSpawnCosts(spawnCosts: Map<EntityType<out Any>, SpawnSettings.SpawnDensity>)"]},{"name":" abstract fun fabric_setSpawners(spawners: Map<SpawnGroup, List<SpawnSettings.SpawnEntry>>)","description":"net.fabricmc.fabric.mixin.biome.modification.SpawnSettingsAccessor.fabric_setSpawners","location":"fabric-biome-api-v1/net.fabricmc.fabric.mixin.biome.modification/-spawn-settings-accessor/fabric_set-spawners.html","searchKeys":["fabric_setSpawners"," abstract fun fabric_setSpawners(spawners: Map<SpawnGroup, List<SpawnSettings.SpawnEntry>>)"]}]
